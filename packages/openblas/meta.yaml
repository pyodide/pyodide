package:
  name: openblas
  version: 0.3.23

source:
  sha256: 5d9491d07168a5d00116cdc068a40022c3455bf9293c7cb86a65b1054d7e5114
  url: https://github.com/xianyi/OpenBLAS/releases/download/v0.3.23/OpenBLAS-0.3.23.tar.gz
  patches:
    - patches/0001-Add-Wno-return-type-flag.patch

build:
  type: shared_library
  script: |
    # seems like .zip does not maintain executable flags, need to reset these
    chmod u+x c_check
    chmod u+x f_check
    chmod u+x exports/gensymbol
    # Replace void returns by int returns
    sed -ri 's/void(\s+)BLASFUNC/int\1BLASFUNC/g' common_interface.h
    sed -ri 's/void(\s+)cblas_/int\1cblas_/g' cblas.h ctest/*.c
    sed -ri 's/void(\s+)(C?NAME)/int\1\2/g' interface/*.c
    sed -ri 's/((extern)?.+) void ([a-z0-9]+_)/\1\2 int \3/g' lapack-netlib/SRC/*.c lapack-netlib/SRC/DEPRECATED/*.c
    # TODO For some function I do need void (i.e. f2c generates void returns)
    # so revert sed change above for those ...
    sed -ri 's@int ([cz](dotc|dotu|ladiv))@void \1@g' lapack-netlib/SRC/*.c lapack-netlib/SRC/DEPRECATED/*.c

    # TODO Fix signature by patch instead? Remove from cython signature?
    sed -ri 's/, integer srname_array_len//g' lapack-netlib/SRC/xerbla_array.c

    # c_abs and z_abs are already defined in libf2c. This is more convenient to
    # have them defined in f2c I think, since scipy f2ced files will have the
    # same return type (e.g. double and the OpenBLAS implementation return
    # float)
    # TODO actually xerba and xerbla_array are already removed in libf2c patch
    # so we should try to be consistent. If we keep the symbols in OpenBLAS we
    # probably need to adapt the signatures in scipy I think
    sed -ri 's/(COMMONOBJS.+=.+)c_abs.\$\(SUFFIX\)(.+)/\1\2/g' driver/others/Makefile
    sed -ri 's/(COMMONOBJS.+=.+)z_abs.\$\(SUFFIX\)(.+)/\1\2/g' driver/others/Makefile

    make libs shared CC=emcc HOSTCC=gcc TARGET=RISCV64_GENERIC NOFORTRAN=1 NO_LAPACKE=1 USE_THREAD=0 LDFLAGS="${SIDE_MODULE_LDFLAGS}"
    mkdir -p dist
    # Add libf2c symbols to libopenblas.so
    emcc ${WASM_LIBRARY_DIR}/lib/libf2c.a libopenblas.a ${SIDE_MODULE_LDFLAGS} -o libopenblas.so

    cp libopenblas.so dist/
    mkdir -p ${WASM_LIBRARY_DIR}/{lib,include}
    # TODO not sure which .h are needed, copying all of them for now
    cp *.h ${WASM_LIBRARY_DIR}/include
    cp dist/libopenblas.so ${WASM_LIBRARY_DIR}/lib

requirements:
  host:
    - libf2c
