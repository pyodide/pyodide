package:
  name: scipy
  version: 1.6.1

source:
  url: https://files.pythonhosted.org/packages/26/68/84dbe18583e79e56e4cee8d00232a8dd7d4ae33bc3acf3be1c347991848f/scipy-1.6.1.tar.gz
  sha256: c4fceb864890b6168e79b0e714c585dbe2fd4222768ee90bc1aa0f8218691b11

  patches:
    # these patches can be found as commits in
    #    https://github.com/rth/scipy/tree/1.6.1-pyodide
    # on top of the v1.6.1 tag
    - patches/fix-blas.patch
    - patches/fix-fortran-files-minpack.patch
    - patches/skip-fortran-fails-to-link.patch
    - patches/skip_ellip_harm_2_pyx_ctypes.patch
    - patches/make-int-return-values.patch
    - patches/add-missing-extern.patch
    - patches/gemm_-no-const.patch
    - patches/sasum-returns-double-not-float.patch
    - patches/disable-scipy-stats-mvn.patch
    - patches/remove-sgeqrfp.patch

build:
  # set linker and C flags to error on anything to do with function declarations being wrong.
  # In webassembly, any conflicts mean that a randomly selected 50% of calls to the function
  # will fail. Better to fail at compile or link time.
  cflags: |
    -I $(PYODIDE_ROOT)/packages/numpy/config
    -I$(PYODIDE_ROOT)/packages/CLAPACK/build/CLAPACK-3.2.1/INCLUDE
    -I$(PYODIDE_ROOT)/packages/.artifacts/include/
    -DUNDERSCORE_G77
    -Werror=implicit-function-declaration
    -Werror=mismatched-parameter-types
    -Werror=mismatched-return-types
  ldflags: |
    -L$(NUMPY_LIB)
    -Wl,--fatal-warnings
  # IMPORTANT: Other locations important in scipy build process:
  # There are two files built in the "capture" pass that need patching:
  #    _blas_subroutines.h, and _cython
  # Scipy has a bunch of custom logic implemented in
  # pyodide-build/pyodide_build/_f2c_fixes.py.
  script: |
    # We get linker errors because the following 36 functions are missing
    # Copying them from a more recent LAPACK seems to work fine.
    wget https://github.com/Reference-LAPACK/lapack/archive/refs/tags/v3.10.0.tar.gz
    tar -xnf v3.10.0.tar.gz
    cd lapack-3.10.0/SRC
    cat \
      cgemqrt.f cgeqrfp.f cgeqrt.f csyconv.f csyconvf.f csyconvf_rook.f ctpmqrt.f ctpqrt.f \
      dgemqrt.f dgeqrfp.f dgeqrt.f dsyconv.f dsyconvf.f dsyconvf_rook.f dtpmqrt.f dtpqrt.f \
      sgemqrt.f sgeqrfp.f sgeqrt.f ssyconv.f ssyconvf.f ssyconvf_rook.f stpmqrt.f stpqrt.f \
      zgemqrt.f zgeqrfp.f zgeqrt.f zsyconv.f zsyconvf.f zsyconvf_rook.f ztpmqrt.f ztpqrt.f \
    >>  ../../scipy/_build_utils/src/wrap_dummy_g77_abi.f
    cd ../..
    # The additional four functions cuncsd, dorcsd, sorcsd, and zuncsd are also
    # missing but they use features of Fortran that aren't Fortran 77 compatible
    # so f2c can't handle them. We stub them with C definitions that do nothing.
    # These stubs come from f2cpatches/wrap_dummy_g77_abi.patch

    # Change all functions that return void into functions that return int
    find scipy -name "*.c*" | xargs sed -i 's/extern void F_FUNC/extern int F_FUNC/g'
    sed -i 's/void F_FUNC/int F_FUNC/g' scipy/odr/__odrpack.c scipy/linalg/_lapack_subroutines.h
    sed -i 's/extern void/extern int/g' scipy/optimize/__minpack.h

    # Input error causes "duplicate symbol" linker errors. Empty out the file.
    echo "" > scipy/sparse/linalg/dsolve/SuperLU/SRC/input_error.c

  prereplay: |
    sed -i 's/void F_FUNC/int F_FUNC/g' scipy/linalg/_blas_subroutines.h
    sed -i 's/\(lsamewrp.*\));/\1, int ca_len, int cb_len);/' scipy/linalg/_blas_subroutines.h
    sed -i 's/\(lsamewrp.*\));/\1, strlen(__pyx_v_ca), strlen(__pyx_v_cb));/' scipy/linalg/cython_blas.c
    sed -i 's/^void/int/g' scipy/interpolate/src/_fitpackmodule.c
    sed -i 's/void/int' scipy/linalg/cython_blas_signatures.txt

requirements:
  run:
    - numpy
    - CLAPACK

test:
  imports:
    - scipy
    - scipy.cluster
    - scipy.constants
    - scipy.fftpack
    - scipy.odr
    - scipy.sparse
    - scipy.interpolate
    - scipy.integrate
    - scipy.linalg
    - scipy.misc
    - scipy.ndimage
    - scipy.spatial
    - scipy.special
