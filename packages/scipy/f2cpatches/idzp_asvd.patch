diff --git a/scipy/linalg/src/id_dist/src/idzp_asvd.c b/../../f2cfixes/idzp_asvd.c
index c08a549..6a6d55c 100644
--- a/scipy/linalg/src/id_dist/src/idzp_asvd.c
+++ b/../../f2cfixes/idzp_asvd.c
@@ -36,14 +36,12 @@
 	     doublecomplex *, doublecomplex *, integer *, doublecomplex *, 
 	    doublecomplex *);
     static integer k;
-    extern /* Subroutine */ int idzp_asvd0__(integer *, integer *, 
-	    doublecomplex *, integer *, doublecomplex *, doublecomplex *, 
-	    doublecomplex *, doublecomplex *, doublecomplex *, integer *, 
-	    doublecomplex *, doublecomplex *);
+    extern /* Subroutine */ int 
+idzp_asvd0__(integer *, integer *, doublecomplex *, integer *, integer *, doublecomplex *, doublecomplex *, doublecomplex *, doublereal *, integer *, doublecomplex *, doublecomplex *);
     static integer ls, lu, lv, lw2, isi, iui, ivi, icol, lcol, iproj, ilist, 
 	    lproj, llist, iwork, lwork;
-    extern /* Subroutine */ int idz_realcomplex__(integer *, doublecomplex *, 
-	    doublecomplex *);
+    extern /* Subroutine */ int 
+idz_realcomplex__(integer *, doublereal *, doublecomplex *);
 
 
 /*       constructs a rank-krank SVD  U Sigma V^*  approximating a */
@@ -203,10 +201,8 @@
 
 
 
-/* Subroutine */ int idzp_asvd0__(integer *m, integer *n, doublecomplex *a, 
-	integer *krank, integer *list, doublecomplex *proj, doublecomplex *u, 
-	doublecomplex *v, doublereal *s, integer *ier, doublecomplex *col, 
-	doublecomplex *work)
+/* Subroutine */ int 
+idzp_asvd0__(integer *m, integer *n, doublecomplex *a, integer *krank, integer *list, doublecomplex *proj, doublecomplex *u, doublecomplex *v, doublereal *s, integer *ier, doublecomplex *col, doublecomplex *work)
 {
     /* System generated locals */
     integer a_dim1, a_offset, u_dim1, u_offset, v_dim1, v_offset, proj_dim1, 
@@ -267,8 +263,7 @@
 
 
 
-/* Subroutine */ int idz_realcomplex__(integer *n, doublereal *a, 
-	doublecomplex *b)
+/* Subroutine */ int idz_realcomplex__(integer *n, doublereal *a, doublecomplex *b)
 {
     /* System generated locals */
     integer i__1, i__2, i__3;
