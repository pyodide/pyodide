diff --git a/../../lsoda.c b/lsoda.c
index ae418a5..23930da 100644
--- a/../../lsoda.c
+++ b/lsoda.c
@@ -141,7 +142,7 @@ static integer c__302 = 302;
     extern doublereal vmnorm_(integer *, doublereal *, doublereal *);
     extern /* Subroutine */ int xerrwv_(char *, integer *, integer *, integer 
 	    *, integer *, integer *, integer *, integer *, doublereal *, 
-	    doublereal *, ftnlen);
+	    doublereal *);
 
 /* ----------------------------------------------------------------------- */
 /* this is the 24 feb 1997 version of */
@@ -1344,14 +1345,11 @@ L60:
     lsa001_1.insufr = 2;
     ls0001_1.lewt = len1c + 1;
     xerrwv_("lsoda--  warning.. rwork length is sufficient for now, but  ", &
-	    c__60, &c__103, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42,
-	     (ftnlen)60);
+	    c__60, &c__103, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      may not be later.  integration will proceed anyway.   ", &
-	    c__60, &c__103, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42,
-	     (ftnlen)60);
+	    c__60, &c__103, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      length needed is lenrw = i1, while lrw = i2.", &c__50, &
-	    c__103, &c__0, &c__2, &lenrw, lrw, &c__0, &c_b42, &c_b42, (ftnlen)
-	    50);
+	    c__103, &c__0, &c__2, &lenrw, lrw, &c__0, &c_b42, &c_b42);
 L65:
     ls0001_1.lsavf = ls0001_1.lewt + ls0001_1.n;
     ls0001_1.lacor = ls0001_1.lsavf + ls0001_1.n;
@@ -1361,14 +1359,11 @@ L65:
     }
     lsa001_1.insufi = 2;
     xerrwv_("lsoda--  warning.. iwork length is sufficient for now, but  ", &
-	    c__60, &c__104, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42,
-	     (ftnlen)60);
+	    c__60, &c__104, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      may not be later.  integration will proceed anyway.   ", &
-	    c__60, &c__104, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42,
-	     (ftnlen)60);
+	    c__60, &c__104, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      length needed is leniw = i1, while liw = i2.", &c__50, &
-	    c__104, &c__0, &c__2, &leniw, liw, &c__0, &c_b42, &c_b42, (ftnlen)
-	    50);
+	    c__104, &c__0, &c__2, &leniw, liw, &c__0, &c_b42, &c_b42);
 L70:
 /* check rtol and atol for legality. ------------------------------------ */
     rtoli = rtol[1];
@@ -1688,23 +1683,20 @@ L280:
 	goto L290;
     }
     xerrwv_("lsoda--  warning..internal t (=r1) and h (=r2) are", &c__50, &
-	    c__101, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__101, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      such that in the machine, t + h = t on the next step  ", &
-	    c__60, &c__101, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42,
-	     (ftnlen)60);
+	    c__60, &c__101, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      (h = step size). solver will continue anyway", &c__50, &
 	    c__101, &c__0, &c__0, &c__0, &c__0, &c__2, &ls0001_1.tn, &
-	    ls0001_1.h__, (ftnlen)50);
+	    ls0001_1.h__);
     if (ls0001_1.nhnil < ls0001_1.mxhnil) {
 	goto L290;
     }
     xerrwv_("lsoda--  above warning has been issued i1 times.  ", &c__50, &
-	    c__102, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__102, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      it will not be issued again for this problem", &c__50, &
 	    c__102, &c__0, &c__1, &ls0001_1.mxhnil, &c__0, &c__0, &c_b42, &
-	    c_b42, (ftnlen)50);
+	    c_b42);
 L290:
 /* ----------------------------------------------------------------------- */
 /*     call stoda(neq,y,yh,nyh,yh,ewt,savf,acor,wm,iwm,f,jac,prja,solsy) */
@@ -1754,16 +1746,16 @@ L300:
     if (ls0001_1.meth == 2) {
 	xerrwv_("lsoda-- a switch to the bdf (stiff) method has occurred     "
 		, &c__60, &c__105, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, 
-		&c_b42, (ftnlen)60);
+		&c_b42);
     }
     if (ls0001_1.meth == 1) {
 	xerrwv_("lsoda-- a switch to the adams (nonstiff) method has occurred"
 		, &c__60, &c__106, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, 
-		&c_b42, (ftnlen)60);
+		&c_b42);
     }
     xerrwv_("     at t = r1,  tentative step size h = r2,  step nst = i1 ", &
 	    c__60, &c__107, &c__0, &c__1, &ls0001_1.nst, &c__0, &c__2, &
-	    ls0001_1.tn, &ls0001_1.h__, (ftnlen)60);
+	    ls0001_1.tn, &ls0001_1.h__);
 L310:
     switch (*itask) {
 	case 1:  goto L320;
@@ -1859,8 +1851,7 @@ L430:
 	return 0;
     }
     xerrwv_("lsoda--  repeated calls with istate = 1 and tout = t (=r1)  ", &
-	    c__60, &c__301, &c__0, &c__0, &c__0, &c__0, &c__1, t, &c_b42, (
-	    ftnlen)60);
+	    c__60, &c__301, &c__0, &c__0, &c__0, &c__0, &c__1, t, &c_b42);
     goto L800;
 /* ----------------------------------------------------------------------- */
 /* block h. */
@@ -1880,61 +1871,53 @@ L500:
 L510:
     ewti = rwork[ls0001_1.lewt + i__ - 1];
     xerrwv_("lsoda--  at t (=r1), ewt(i1) has become r2 .le. 0.", &c__50, &
-	    c__202, &c__0, &c__1, &i__, &c__0, &c__2, &ls0001_1.tn, &ewti, (
-	    ftnlen)50);
+	    c__202, &c__0, &c__1, &i__, &c__0, &c__2, &ls0001_1.tn, &ewti);
     *istate = -6;
     goto L580;
 /* too much accuracy requested for machine precision. ------------------- */
 L520:
     xerrwv_("lsoda--  at t (=r1), too much accuracy requested  ", &c__50, &
-	    c__203, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__203, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      for precision of machine..  see tolsf (=r2) ", &c__50, &
-	    c__203, &c__0, &c__0, &c__0, &c__0, &c__2, &ls0001_1.tn, &tolsf, (
-	    ftnlen)50);
+	    c__203, &c__0, &c__0, &c__0, &c__0, &c__2, &ls0001_1.tn, &tolsf);
     rwork[14] = tolsf;
     *istate = -2;
     goto L580;
 /* kflag = -1.  error test failed repeatedly or with abs(h) = hmin. ----- */
 L530:
     xerrwv_("lsoda--  at t(=r1) and step size h(=r2), the error", &c__50, &
-	    c__204, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__204, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      test failed repeatedly or with abs(h) = hmin", &c__50, &
 	    c__204, &c__0, &c__0, &c__0, &c__0, &c__2, &ls0001_1.tn, &
-	    ls0001_1.h__, (ftnlen)50);
+	    ls0001_1.h__);
     *istate = -4;
     goto L560;
 /* kflag = -2.  convergence failed repeatedly or with abs(h) = hmin. ---- */
 L540:
     xerrwv_("lsoda--  at t (=r1) and step size h (=r2), the    ", &c__50, &
-	    c__205, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__205, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      corrector convergence failed repeatedly     ", &c__50, &
-	    c__205, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__205, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      or with abs(h) = hmin   ", &c__30, &c__205, &c__0, &c__0, &
-	    c__0, &c__0, &c__2, &ls0001_1.tn, &ls0001_1.h__, (ftnlen)30);
+	    c__0, &c__0, &c__2, &ls0001_1.tn, &ls0001_1.h__);
     *istate = -5;
     goto L560;
 /* rwork length too small to proceed. ----------------------------------- */
 L550:
     xerrwv_("lsoda--  at current t(=r1), rwork length too small", &c__50, &
-	    c__206, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__206, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      to proceed.  the integration was otherwise successful.", &
 	    c__60, &c__206, &c__0, &c__0, &c__0, &c__0, &c__1, &ls0001_1.tn, &
-	    c_b42, (ftnlen)60);
+	    c_b42);
     *istate = -7;
     goto L580;
 /* iwork length too small to proceed. ----------------------------------- */
 L555:
     xerrwv_("lsoda--  at current t(=r1), iwork length too small", &c__50, &
-	    c__207, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__207, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      to proceed.  the integration was otherwise successful.", &
 	    c__60, &c__207, &c__0, &c__0, &c__0, &c__0, &c__1, &ls0001_1.tn, &
-	    c_b42, (ftnlen)60);
+	    c_b42);
     *istate = -7;
     goto L580;
 /* compute imxer if relevant. ------------------------------------------- */
@@ -1985,139 +1968,127 @@ L580:
 /* ----------------------------------------------------------------------- */
 L601:
     xerrwv_("lsoda--  istate (=i1) illegal ", &c__30, &c__1, &c__0, &c__1, 
-	    istate, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    istate, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L602:
     xerrwv_("lsoda--  itask (=i1) illegal  ", &c__30, &c__2, &c__0, &c__1, 
-	    itask, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    itask, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L603:
     xerrwv_("lsoda--  istate .gt. 1 but lsoda not initialized  ", &c__50, &
-	    c__3, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)
-	    50);
+	    c__3, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L604:
     xerrwv_("lsoda--  neq (=i1) .lt. 1     ", &c__30, &c__4, &c__0, &c__1, &
-	    neq[1], &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    neq[1], &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L605:
     xerrwv_("lsoda--  istate = 3 and neq increased (i1 to i2)  ", &c__50, &
-	    c__5, &c__0, &c__2, &ls0001_1.n, &neq[1], &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__5, &c__0, &c__2, &ls0001_1.n, &neq[1], &c__0, &c_b42, &c_b42);
     goto L700;
 L606:
     xerrwv_("lsoda--  itol (=i1) illegal   ", &c__30, &c__6, &c__0, &c__1, 
-	    itol, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    itol, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L607:
     xerrwv_("lsoda--  iopt (=i1) illegal   ", &c__30, &c__7, &c__0, &c__1, 
-	    iopt, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    iopt, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L608:
     xerrwv_("lsoda--  jt (=i1) illegal     ", &c__30, &c__8, &c__0, &c__1, jt,
-	     &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	     &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L609:
     xerrwv_("lsoda--  ml (=i1) illegal.. .lt.0 or .ge.neq (=i2)", &c__50, &
-	    c__9, &c__0, &c__2, &ml, &neq[1], &c__0, &c_b42, &c_b42, (ftnlen)
-	    50);
+	    c__9, &c__0, &c__2, &ml, &neq[1], &c__0, &c_b42, &c_b42);
     goto L700;
 L610:
     xerrwv_("lsoda--  mu (=i1) illegal.. .lt.0 or .ge.neq (=i2)", &c__50, &
-	    c__10, &c__0, &c__2, &mu, &neq[1], &c__0, &c_b42, &c_b42, (ftnlen)
-	    50);
+	    c__10, &c__0, &c__2, &mu, &neq[1], &c__0, &c_b42, &c_b42);
     goto L700;
 L611:
     xerrwv_("lsoda--  ixpr (=i1) illegal   ", &c__30, &c__11, &c__0, &c__1, &
-	    lsa001_1.ixpr, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    lsa001_1.ixpr, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L612:
     xerrwv_("lsoda--  mxstep (=i1) .lt. 0  ", &c__30, &c__12, &c__0, &c__1, &
-	    ls0001_1.mxstep, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    ls0001_1.mxstep, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L613:
     xerrwv_("lsoda--  mxhnil (=i1) .lt. 0  ", &c__30, &c__13, &c__0, &c__1, &
-	    ls0001_1.mxhnil, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    ls0001_1.mxhnil, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L614:
     xerrwv_("lsoda--  tout (=r1) behind t (=r2)      ", &c__40, &c__14, &c__0,
-	     &c__0, &c__0, &c__0, &c__2, tout, t, (ftnlen)40);
+	     &c__0, &c__0, &c__0, &c__2, tout, t);
     xerrwv_("      integration direction is given by h0 (=r1)  ", &c__50, &
-	    c__14, &c__0, &c__0, &c__0, &c__0, &c__1, &h0, &c_b42, (ftnlen)50)
+	    c__14, &c__0, &c__0, &c__0, &c__0, &c__1, &h0, &c_b42)
 	    ;
     goto L700;
 L615:
     xerrwv_("lsoda--  hmax (=r1) .lt. 0.0  ", &c__30, &c__15, &c__0, &c__0, &
-	    c__0, &c__0, &c__1, &hmax, &c_b42, (ftnlen)30);
+	    c__0, &c__0, &c__1, &hmax, &c_b42);
     goto L700;
 L616:
     xerrwv_("lsoda--  hmin (=r1) .lt. 0.0  ", &c__30, &c__16, &c__0, &c__0, &
-	    c__0, &c__0, &c__1, &ls0001_1.hmin, &c_b42, (ftnlen)30);
+	    c__0, &c__0, &c__1, &ls0001_1.hmin, &c_b42);
     goto L700;
 L617:
     xerrwv_("lsoda--  rwork length needed, lenrw (=i1), exceeds lrw (=i2)", &
-	    c__60, &c__17, &c__0, &c__2, &lenrw, lrw, &c__0, &c_b42, &c_b42, (
-	    ftnlen)60);
+	    c__60, &c__17, &c__0, &c__2, &lenrw, lrw, &c__0, &c_b42, &c_b42);
     goto L700;
 L618:
     xerrwv_("lsoda--  iwork length needed, leniw (=i1), exceeds liw (=i2)", &
-	    c__60, &c__18, &c__0, &c__2, &leniw, liw, &c__0, &c_b42, &c_b42, (
-	    ftnlen)60);
+	    c__60, &c__18, &c__0, &c__2, &leniw, liw, &c__0, &c_b42, &c_b42);
     goto L700;
 L619:
     xerrwv_("lsoda--  rtol(i1) is r1 .lt. 0.0        ", &c__40, &c__19, &c__0,
-	     &c__1, &i__, &c__0, &c__1, &rtoli, &c_b42, (ftnlen)40);
+	     &c__1, &i__, &c__0, &c__1, &rtoli, &c_b42);
     goto L700;
 L620:
     xerrwv_("lsoda--  atol(i1) is r1 .lt. 0.0        ", &c__40, &c__20, &c__0,
-	     &c__1, &i__, &c__0, &c__1, &atoli, &c_b42, (ftnlen)40);
+	     &c__1, &i__, &c__0, &c__1, &atoli, &c_b42);
     goto L700;
 L621:
     ewti = rwork[ls0001_1.lewt + i__ - 1];
     xerrwv_("lsoda--  ewt(i1) is r1 .le. 0.0         ", &c__40, &c__21, &c__0,
-	     &c__1, &i__, &c__0, &c__1, &ewti, &c_b42, (ftnlen)40);
+	     &c__1, &i__, &c__0, &c__1, &ewti, &c_b42);
     goto L700;
 L622:
     xerrwv_("lsoda--  tout (=r1) too close to t(=r2) to start integration", &
-	    c__60, &c__22, &c__0, &c__0, &c__0, &c__0, &c__2, tout, t, (
-	    ftnlen)60);
+	    c__60, &c__22, &c__0, &c__0, &c__0, &c__0, &c__2, tout, t);
     goto L700;
 L623:
     xerrwv_("lsoda--  itask = i1 and tout (=r1) behind tcur - hu (= r2)  ", &
-	    c__60, &c__23, &c__0, &c__1, itask, &c__0, &c__2, tout, &tp, (
-	    ftnlen)60);
+	    c__60, &c__23, &c__0, &c__1, itask, &c__0, &c__2, tout, &tp);
     goto L700;
 L624:
     xerrwv_("lsoda--  itask = 4 or 5 and tcrit (=r1) behind tcur (=r2)   ", &
 	    c__60, &c__24, &c__0, &c__0, &c__0, &c__0, &c__2, &tcrit, &
-	    ls0001_1.tn, (ftnlen)60);
+	    ls0001_1.tn);
     goto L700;
 L625:
     xerrwv_("lsoda--  itask = 4 or 5 and tcrit (=r1) behind tout (=r2)   ", &
-	    c__60, &c__25, &c__0, &c__0, &c__0, &c__0, &c__2, &tcrit, tout, (
-	    ftnlen)60);
+	    c__60, &c__25, &c__0, &c__0, &c__0, &c__0, &c__2, &tcrit, tout);
     goto L700;
 L626:
     xerrwv_("lsoda--  at start of problem, too much accuracy   ", &c__50, &
-	    c__26, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)
-	    50);
+	    c__26, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
     xerrwv_("      requested for precision of machine..  see tolsf (=r1) ", &
-	    c__60, &c__26, &c__0, &c__0, &c__0, &c__0, &c__1, &tolsf, &c_b42, 
-	    (ftnlen)60);
+	    c__60, &c__26, &c__0, &c__0, &c__0, &c__0, &c__1, &tolsf, &c_b42);
     rwork[14] = tolsf;
     goto L700;
 L627:
     xerrwv_("lsoda--  trouble from intdy. itask = i1, tout = r1", &c__50, &
-	    c__27, &c__0, &c__1, itask, &c__0, &c__1, tout, &c_b42, (ftnlen)
-	    50);
+	    c__27, &c__0, &c__1, itask, &c__0, &c__1, tout, &c_b42);
     goto L700;
 L628:
     xerrwv_("lsoda--  mxordn (=i1) .lt. 0  ", &c__30, &c__28, &c__0, &c__1, &
-	    lsa001_1.mxordn, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    lsa001_1.mxordn, &c__0, &c__0, &c_b42, &c_b42);
     goto L700;
 L629:
     xerrwv_("lsoda--  mxords (=i1) .lt. 0  ", &c__30, &c__29, &c__0, &c__1, &
-	    lsa001_1.mxords, &c__0, &c__0, &c_b42, &c_b42, (ftnlen)30);
+	    lsa001_1.mxords, &c__0, &c__0, &c_b42, &c_b42);
 
 L700:
     if (ls0001_1.illin == 5) {
@@ -2128,8 +2099,7 @@ L700:
     return 0;
 L710:
     xerrwv_("lsoda--  repeated occurrences of illegal input    ", &c__50, &
-	    c__302, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42, (
-	    ftnlen)50);
+	    c__302, &c__0, &c__0, &c__0, &c__0, &c__0, &c_b42, &c_b42);
 
 L800:
     *istate = -8;
