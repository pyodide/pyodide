From 861d31484a840ebcf014906fe44b281790fc6a5c Mon Sep 17 00:00:00 2001
From: Hood Chatham <roberthoodchatham@gmail.com>
Date: Tue, 30 Aug 2022 11:51:53 -0700
Subject: [PATCH 13/13] Fix fitpack

---
 scipy/interpolate/fitpack/dblint.f | 9 ++++-----
 scipy/interpolate/fitpack/evapol.f | 5 ++---
 scipy/interpolate/fitpack/fprati.f | 5 ++---
 scipy/interpolate/fitpack/splint.f | 7 +++----
 4 files changed, 11 insertions(+), 15 deletions(-)

diff --git a/scipy/interpolate/fitpack/dblint.f b/scipy/interpolate/fitpack/dblint.f
index 8ae6b175f..b03858f0f 100644
--- a/scipy/interpolate/fitpack/dblint.f
+++ b/scipy/interpolate/fitpack/dblint.f
@@ -1,7 +1,6 @@
-      recursive function dblint(tx,nx,ty,ny,c,kx,ky,xb,xe,yb,
-     *    ye,wrk) result(dblint_res)
+      real*8 function dblint(tx,nx,ty,ny,c,kx,ky,xb,xe,yb,
+     *    ye,wrk)
       implicit none
-      real*8 :: dblint_res
 c  function dblint calculates the double integral
 c         / xe  / ye
 c        |     |      s(x,y) dx dy
@@ -75,7 +74,7 @@ c  we calculate the integrals of the normalized b-splines ni,kx+1(x)
 c  we calculate the integrals of the normalized b-splines nj,ky+1(y)
       call fpintb(ty,ny,wrk(nkx1+1),nky1,yb,ye)
 c  calculate the integral of s(x,y)
-      dblint_res = 0.
+      dblint = 0.
       do 200 i=1,nkx1
         res = wrk(i)
         if(res.eq.0.) go to 200
@@ -84,7 +83,7 @@ c  calculate the integral of s(x,y)
         do 100 j=1,nky1
           m = m+1
           l = l+1
-          dblint_res = dblint_res + res*wrk(l)*c(m)
+          dblint = dblint + res*wrk(l)*c(m)
  100    continue
  200  continue
       return
diff --git a/scipy/interpolate/fitpack/evapol.f b/scipy/interpolate/fitpack/evapol.f
index f02569a40..7e976002a 100644
--- a/scipy/interpolate/fitpack/evapol.f
+++ b/scipy/interpolate/fitpack/evapol.f
@@ -1,6 +1,5 @@
-      recursive function evapol(tu,nu,tv,nv,c,rad,x,y) result(e_res)
+      real*8 function evapol(tu,nu,tv,nv,c,rad,x,y)
       implicit none
-      real*8 :: e_res
 c  function program evacir evaluates the function f(x,y) = s(u,v),
 c  defined through the transformation
 c      x = u*rad(v)*cos(v)    y = u*rad(v)*sin(v)
@@ -78,7 +77,7 @@ c  calculate the (u,v)-coordinates of the given point.
       if(u.gt.one) u = one
 c  evaluate s(u,v)
   10  call bispev(tu,nu,tv,nv,c,3,3,u,1,v,1,f,wrk,8,iwrk,2,ier)
-      e_res = f
+      evapol = f
       return
       end
 
diff --git a/scipy/interpolate/fitpack/fprati.f b/scipy/interpolate/fitpack/fprati.f
index 71c57eb01..97b5851df 100644
--- a/scipy/interpolate/fitpack/fprati.f
+++ b/scipy/interpolate/fitpack/fprati.f
@@ -1,6 +1,5 @@
-      recursive function fprati(p1,f1,p2,f2,p3,f3) result(fprati_res)
+      real*8 function fprati(p1,f1,p2,f2,p3,f3)
       implicit none
-      real*8 :: fprati_res
 c  given three points (p1,f1),(p2,f2) and (p3,f3), function fprati
 c  gives the value of p such that the rational interpolating function
 c  of the form r(p) = (u*p+v)/(p+w) equals zero at p.
@@ -26,6 +25,6 @@ c  adjust the value of p1,f1,p3 and f3 such that f1 > 0 and f3 < 0.
       go to 40
   30  p3 = p2
       f3 = f2
-  40  fprati_res = p
+  40  fprati = p
       return
       end
diff --git a/scipy/interpolate/fitpack/splint.f b/scipy/interpolate/fitpack/splint.f
index f038b931b..776b06b9e 100644
--- a/scipy/interpolate/fitpack/splint.f
+++ b/scipy/interpolate/fitpack/splint.f
@@ -1,6 +1,5 @@
-      recursive function splint(t,n,c,k,a,b,wrk) result(splint_res)
+      real*8 function splint(t,n,c,k,a,b,wrk)
       implicit none
-      real*8 :: splint_res
 c  function splint calculates the integral of a spline function s(x)
 c  of degree k, which is given in its normalized b-spline representation
 c
@@ -52,9 +51,9 @@ c  calculate the integrals wrk(i) of the normalized b-splines
 c  ni,k+1(x), i=1,2,...nk1.
       call fpintb(t,n,wrk,nk1,a,b)
 c  calculate the integral of s(x).
-      splint_res = 0.0d0
+      splint = 0.0d0
       do 10 i=1,nk1
-        splint_res = splint_res+c(i)*wrk(i)
+        splint = splint+c(i)*wrk(i)
   10  continue
       return
       end
-- 
2.25.1

