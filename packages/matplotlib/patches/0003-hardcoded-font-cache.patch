From 84121d18d4f98fb8eedcc0c5ba282231714dc40a Mon Sep 17 00:00:00 2001
From: casatir <romain.casati@basthon.fr>
Date: Mon, 12 Dec 2022 18:27:17 -0800
Subject: [PATCH 3/3] hardcoded font cache

In Pyodide, font list (see packages/matplotlib/src/fontlist.json)
is manually pushed in the matplotlib's directory (see meta.yaml)
so we teach `font_manager.py` where to find it.
---
 lib/matplotlib/font_manager.py | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/lib/matplotlib/font_manager.py b/lib/matplotlib/font_manager.py
index 7eb183ab00..51a0a29bec 100644
--- a/lib/matplotlib/font_manager.py
+++ b/lib/matplotlib/font_manager.py
@@ -1557,7 +1557,6 @@ def _get_font(font_filepaths, hinting_factor, *, _kerning_factor, thread_id):
         _kerning_factor=_kerning_factor
     )
 
-
 # FT2Font objects cannot be used across fork()s because they reference the same
 # FT_Library object.  While invalidating *all* existing FT2Fonts after a fork
 # would be too complicated to be worth it, the main way FT2Fonts get reused is
@@ -1615,8 +1614,7 @@ def get_font(font_filepaths, hinting_factor=None):
 
 
 def _load_fontmanager(*, try_read_cache=True):
-    fm_path = Path(
-        mpl.get_cachedir(), f"fontlist-v{FontManager.__version__}.json")
+    fm_path = Path(__file__).parent.joinpath("fontlist.json")
     if try_read_cache:
         try:
             fm = json_load(fm_path)
-- 
2.25.1

