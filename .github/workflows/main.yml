name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-core:
    runs-on: ubuntu-latest
    container:
      image: pyodide/pyodide-env:18
    env:
      EMSDK_NUM_CORES: 3
      EMCC_CORES: 3
      PYODIDE_JOBS: 3


    steps:
      - uses: actions/checkout@v2

      - name: Cache ccache output
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: ${{ hashFiles('Makefile.envs') }}-v20201205-

      - name: Build emsdk
        run: |
            ccache -z
            make -C emsdk
            ccache -s

      - name: Build Cpython
        run: |
            ccache -z
            make -C cpython
            ccache -s

      - name: build Pyodide core
        run: |
            ccache -z
            # The following packages are currently used in the main pyodide test suite
            PYODIDE_PACKAGES="micropip,pyparsing,pytz,packaging,Jinja2" make
            ccache -s

      - name: check-size
        run: ls -lh build/

      - name: Store artifacts all
        uses: actions/upload-artifact@v2
        with:
          name: core-build-all
          path: ./
          retention-days: 5

      - name: Store artifacts build
        uses: actions/upload-artifact@v2
        with:
          name: core-build
          path: ./build/
          retention-days: 10

  test-core:
    runs-on: ubuntu-latest
    container:
      image: pyodide/pyodide-env:18
    env:
      EMSDK_NUM_CORES: 3
      EMCC_CORES: 3
      PYODIDE_JOBS: 3
    needs: build-core
    strategy:
      matrix:
        selenium_runner: [firefox, chrome]


    steps:
      - uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: core-build

      - name: check-size
        env:
           SELENIUM_RUNNER: ${{ matrix.selenium_runner }}
        run: |
           tools/pytest_wrapper.py src packages/micropip/ -v -k "${SELENIUM_RUNNER}" -n 3
