From 4599cc51475c12c015672d2992c021b0a8d2eeaa Mon Sep 17 00:00:00 2001
From: Hood Chatham <roberthoodchatham@gmail.com>
Date: Tue, 15 Feb 2022 23:27:03 -0500
Subject: [PATCH 3/5] Fix side module exception handling

See https://github.com/emscripten-core/emscripten/pull/16309

Apparently compiled C++ code tries to call a bunch of functions with names like
`__cxa_find_matching_catch_##` which all mean the same function. Emscripten
statically defines the set of these that are used in the main module, but it is
possible that a side module will need extra ones. This fixes the problem by updating
`resolveGlobalSymbol` so that every `__cxa_find_matching_catch_##` will resolve to
`__cxa_find_matching_catch`.
---
 src/library_dylink.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/library_dylink.js b/src/library_dylink.js
index da8809699..7a7fcb3d9 100644
--- a/src/library_dylink.js
+++ b/src/library_dylink.js
@@ -32,6 +32,9 @@ var LibraryDylink = {
       sym = createInvokeFunction(symName.split('_')[1]);
     }
 
+    if(!sym && symName.startsWith("__cxa_find_matching_catch")){
+      sym = Module.___cxa_find_matching_catch;
+    }
     return sym;
   },
 
-- 
2.25.1

