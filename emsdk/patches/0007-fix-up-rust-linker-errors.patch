From 556da3d7a361c566d5150a79074211f982bca91a Mon Sep 17 00:00:00 2001
From: Hood Chatham <roberthoodchatham@gmail.com>
Date: Thu, 6 Jan 2022 09:40:39 -0800
Subject: [PATCH 7/7] fix up rust linker errors

This fixes a few problems that come up when linking rust programs:
1. Rust .rlib archives contain an extra metadata file called lib.rmeta. The
   linker is not happy about these archives. Modifying the archive in place
   breaks Cargo. Instead, copy the archive to a temp file, remove lib.rmeta
   from the temp file, and link the modified copy.
2. We need to run ranlib on the archive.
3. libcompiler_builtins.rlib contains invalid wasm. I'm not sure why. Nothing
   too bad *seems* to go wrong if we just drop it.
---
 tools/building.py | 30 ++++++++++++++++++++++++++++--
 1 file changed, 28 insertions(+), 2 deletions(-)

diff --git a/tools/building.py b/tools/building.py
index 512561c69..579b42c44 100644
--- a/tools/building.py
+++ b/tools/building.py
@@ -464,8 +464,34 @@ def link_lld(args, target, external_symbols=None):
   if '--relocatable' not in args and '-r' not in args:
     cmd += lld_flags_for_executable(external_symbols)
 
-  cmd = get_command_with_possible_response_file(cmd)
-  check_call(cmd)
+  if any(arg.endswith(".rlib") for arg in cmd):
+    from tempfile import mkstemp
+    from pathlib import Path
+    tempfiles = []
+    new_cmd = []
+    try:
+      for arg in cmd:
+        if arg == "-lc":
+          continue
+        if not arg.endswith(".rlib"):
+          new_cmd.append(arg)
+          continue
+        fd, temp_path = mkstemp()
+        shutil.copy2(arg, temp_path)
+        tempfiles.append(Path(temp_path))
+        subprocess.call(["ar", "-d", temp_path, "lib.rmeta"])
+        subprocess.call(["emranlib", temp_path])
+        new_cmd.append(temp_path)
+      cmd = new_cmd
+      cmd = get_command_with_possible_response_file(cmd)
+      check_call(cmd)
+    finally:
+      for file in tempfiles:
+        file.unlink()
+  else:
+    cmd = get_command_with_possible_response_file(cmd)
+    check_call(cmd)
+
 
 
 def link_bitcode(args, target, force_archive_contents=False):
-- 
2.25.1

