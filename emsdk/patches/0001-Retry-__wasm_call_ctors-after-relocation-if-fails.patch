From 8bfecda3df320f7fc03fd172c76eb7d356e6fbb9 Mon Sep 17 00:00:00 2001
From: Gyeongjae Choi <def6488@gmail.com>
Date: Thu, 11 Aug 2022 08:07:51 +0000
Subject: [PATCH] Retry __wasm_call_ctors after relocation if fails.

Before Emscripten 3.1.15, data relocation happened during the
`__wasm_call_ctors` call. However, emscripten 3.1.15 changed this by
exporting `__wasm_apply_data_relocs` and `__wasm_call_ctors`
separately, then call `__wasm_apply_data_relocs` after `__wasm_call_ctors`.

After this update, some packages (especially those that use CMake)
started to fail during the post initialization step in `__wasm_call_ctors`.

We don't understand why this error happens.
This patch makes to retry `__wasm_call_ctors` after the relocation.

See: https://github.com/llvm/llvm-project/commit/53217ecb882c25bb69e6065512a0627828d6e870
---
 src/library_dylink.js | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/src/library_dylink.js b/src/library_dylink.js
index 9731c02e5..77b6db7f8 100644
--- a/src/library_dylink.js
+++ b/src/library_dylink.js
@@ -649,9 +649,15 @@ var LibraryDylink = {
         if (!ENVIRONMENT_IS_PTHREAD) {
 #endif
           var init = moduleExports['__wasm_call_ctors'];
+          var init_success = true;
           if (init) {
             if (runtimeInitialized) {
-              init();
+              try {
+                init();
+              } catch (e) {
+                init_success = false;
+                err('Error in initializing a module: ' + e);
+              }
             } else {
               // we aren't ready to run compiled code yet
               __ATINIT__.push(init);
@@ -665,6 +671,17 @@ var LibraryDylink = {
               __RELOC_FUNCS__.push(applyRelocs);
             }
           }
+
+          if (!init_success) {
+              try {
+                init();
+                err('successfully run __wasm_call_ctors on retrial!');
+              } catch (e) {
+                failed = true;
+                err('[retrial] error in initializing a module: ' + e);
+              }
+          }
+
 #if USE_PTHREADS
         }
 #endif
-- 
2.37.1

