From 2a43c08bc1340eafefb58f84e07cda79d3031c59 Mon Sep 17 00:00:00 2001
From: Hood Chatham <roberthoodchatham@gmail.com>
Date: Fri, 2 Jun 2023 11:59:32 -0700
Subject: [PATCH 1/3] Add back fs.findObject and fs.readFile in loadLibData

See upstream PR:
https://github.com/emscripten-core/emscripten/pull/19513
---
 src/lib/libdylink.js | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/lib/libdylink.js b/src/lib/libdylink.js
index b1e701782..f4c3b9045 100644
--- a/src/lib/libdylink.js
+++ b/src/lib/libdylink.js
@@ -1089,14 +1089,23 @@ var LibraryDylink = {
 #endif
 
       // for wasm, we can use fetch for async, but for fs mode we can only imitate it
+      var libData;
       if (handle) {
         var data = {{{ makeGetValue('handle', C_STRUCTS.dso.file_data, '*') }}};
         var dataSize = {{{ makeGetValue('handle', C_STRUCTS.dso.file_data_size, '*') }}};
         if (data && dataSize) {
-          var libData = HEAP8.slice(data, data + dataSize);
-          return flags.loadAsync ? Promise.resolve(libData) : libData;
+          libData = HEAP8.slice(data, data + dataSize);
         }
       }
+      if (!libData && flags.fs && flags.fs.findObject(libName)) {
+        libData = flags.fs.readFile(libName, {encoding: 'binary'});
+        if (!(libData instanceof Uint8Array)) {
+          libData = new Uint8Array(libData);
+        }
+      }
+      if (libData) {
+        return flags.loadAsync ? Promise.resolve(libData) : libData;
+      }
 
 #if FILESYSTEM
       var f = findLibraryFS(libName, flags.rpath);
-- 
2.34.1

