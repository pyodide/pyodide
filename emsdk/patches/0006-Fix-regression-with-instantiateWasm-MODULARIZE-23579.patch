From d3f3e281ebeeb2f0c3ea4e74d5eeb0b7c76f555a Mon Sep 17 00:00:00 2001
From: Sam Clegg <sbc@chromium.org>
Date: Tue, 4 Feb 2025 08:57:13 -0800
Subject: [PATCH 6/7] Fix regression with instantiateWasm + MODULARIZE (#23579)

We didn't have test coverage of this case and it was broken in #23157.

Fixes: #23577
---
 src/preamble.js | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)

diff --git a/src/preamble.js b/src/preamble.js
index 0fd120445..87d53f15d 100644
--- a/src/preamble.js
+++ b/src/preamble.js
@@ -1026,17 +1026,21 @@ function getWasmImports() {
   // Also pthreads and wasm workers initialize the wasm instance through this
   // path.
   if (Module['instantiateWasm']) {
-    try {
-      return Module['instantiateWasm'](info, receiveInstance);
-    } catch(e) {
-      err(`Module.instantiateWasm callback failed with error: ${e}`);
-      #if MODULARIZE
-        // If instantiation fails, reject the module ready promise.
-        readyPromiseReject(e);
-      #else
-        return false;
-      #endif
-    }
+    return new Promise((resolve, reject) => {
+#if ASSERTIONS
+      try {
+#endif
+        Module['instantiateWasm'](info, (mod, inst) => {
+          receiveInstance(mod, inst);
+          resolve(mod.exports);
+        });
+#if ASSERTIONS
+      } catch(e) {
+        err(`Module.instantiateWasm callback failed with error: ${e}`);
+        reject(e);
+      }
+#endif
+    });
   }
 #endif
 
-- 
2.34.1

