From 8a12526c51a97ccd56ff0481e1f7cc146539526b Mon Sep 17 00:00:00 2001
From: Hood <hood@mit.edu>
Date: Mon, 14 Jun 2021 16:06:40 -0700
Subject: [PATCH] Patch building.py to deal with '[wasm-validator error in
 module] unexpected true: Imported global cannot be mutable'

---
 tools/building.py | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/tools/building.py b/tools/building.py
index 42af1999b..b36ad86e8 100644
--- a/tools/building.py
+++ b/tools/building.py
@@ -1608,7 +1608,7 @@ def run_binaryen_command(tool, infile, outfile=None, args=[], debug=False, stdou
   if debug:
     cmd += ['-g'] # preserve the debug info
   # if the features are not already handled, handle them
-  if '--detect-features' not in cmd:
+  if '--detect-features' not in cmd and tool != "wasm-opt":
     cmd += get_binaryen_feature_flags()
   # if we are emitting a source map, every time we load and save the wasm
   # we must tell binaryen to update it
@@ -1620,8 +1620,15 @@ def run_binaryen_command(tool, infile, outfile=None, args=[], debug=False, stdou
     save_intermediate(outfile, '%s.wasm' % tool)
   return ret
 
+import inspect
+run_binaryen_command_sig = inspect.signature(run_binaryen_command)
 
 def run_wasm_opt(*args, **kwargs):
+  boundargs = run_binaryen_command_sig.bind('wasm-opt', *args, **kwargs)
+  boundargs.apply_defaults()
+  boundargs.arguments["args"] += ["--enable-mutable-globals"]
+  args = boundargs.args
+  kwargs = boundargs.kwargs
   return run_binaryen_command('wasm-opt', *args, **kwargs)
 
 
-- 
2.17.1

