From ed6a86aaa20506952badd93fc1eec879aa40e240 Mon Sep 17 00:00:00 2001
From: Hood Chatham <roberthoodchatham@gmail.com>
Date: Mon, 31 Mar 2025 13:33:46 +0200
Subject: [PATCH 3/3] Revert "Disallow exports that are not valid C/C++
 identifiers (#23563)"

This reverts commit 08d2cc3c559c64f377bc932bcc418fd661998232.
---
 test/test_other.py  | 5 -----
 tools/emscripten.py | 3 ---
 tools/shared.py     | 2 +-
 3 files changed, 1 insertion(+), 9 deletions(-)

diff --git a/test/test_other.py b/test/test_other.py
index 34f0fbc2d..57ab711d4 100644
--- a/test/test_other.py
+++ b/test/test_other.py
@@ -15821,11 +15821,6 @@ addToLibrary({
     ''')
     self.do_runf('main.cpp', 'Hello Module!', emcc_args=['-std=c++20', '-fmodules'])
 
-  def test_invalid_export_name(self):
-    create_file('test.c', '__attribute__((export_name("my.func"))) void myfunc() {}')
-    err = self.expect_fail([EMCC, 'test.c'])
-    self.assertContained('emcc: error: invalid export name: my.func', err)
-
   @also_with_modularize
   def test_instantiate_wasm(self):
     create_file('pre.js', '''
diff --git a/tools/emscripten.py b/tools/emscripten.py
index 22ee688c5..4566b958a 100644
--- a/tools/emscripten.py
+++ b/tools/emscripten.py
@@ -573,9 +573,6 @@ def finalize_wasm(infile, outfile, js_syms):
   # These are any exports that were not requested on the command line and are
   # not known auto-generated system functions.
   unexpected_exports = [e for e in metadata.all_exports if treat_as_user_export(e)]
-  for n in unexpected_exports:
-    if not n.isidentifier():
-      exit_with_error(f'invalid export name: {n}')
   unexpected_exports = [asmjs_mangle(e) for e in unexpected_exports]
   unexpected_exports = [e for e in unexpected_exports if e not in expected_exports]
 
diff --git a/tools/shared.py b/tools/shared.py
index ba5bcb9e9..277ce3f59 100644
--- a/tools/shared.py
+++ b/tools/shared.py
@@ -651,7 +651,7 @@ def is_c_symbol(name):
 
 
 def treat_as_user_export(name):
-  return not name.startswith(('dynCall_', 'orig$'))
+  return not name.startswith('dynCall_')
 
 
 def asmjs_mangle(name):
-- 
2.34.1

