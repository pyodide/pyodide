From e5ed7af0f082169e18f8da6fc8eeefb997fb9f8c Mon Sep 17 00:00:00 2001
From: Hood Chatham <roberthoodchatham@gmail.com>
Date: Tue, 22 Oct 2024 15:16:03 +0200
Subject: [PATCH 5/8] Add fallback trampoline for JSPI with no type reflection

---
 Python/emscripten_trampoline.c | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

diff --git a/Python/emscripten_trampoline.c b/Python/emscripten_trampoline.c
index 8d29393bd87..b319122a8d7 100644
--- a/Python/emscripten_trampoline.c
+++ b/Python/emscripten_trampoline.c
@@ -10,7 +10,21 @@
  * https://github.com/GoogleChromeLabs/wasm-feature-detect/blob/main/src/detectors/type-reflection/index.js
  */
 EM_JS(int, _PyEM_detect_type_reflection, (), {
-  return "Function" in WebAssembly;
+    if (!("Function" in WebAssembly) && !("Suspending" in WebAssembly)) {
+        return false;
+    }
+    if (!("Function" in WebAssembly)) {
+        Module.PyEM_CountArgs = Module.PyEM_CountArgsFallback;
+        return !!Module.PyEM_CountArgsFallback;
+    }
+    if (WebAssembly.Function.type) {
+        // Node v20
+        Module.PyEM_CountArgs = (func) => WebAssembly.Function.type(wasmTable.get(func)).parameters.length;
+    } else {
+        // Node >= 22, v8-based browsers
+        Module.PyEM_CountArgs = (func) => wasmTable.get(func).type().parameters.length;
+    }
+    return true;
 });
 
 void
@@ -36,7 +50,7 @@ EM_JS(int, _PyEM_CountFuncParams, (PyCFunctionWithKeywords func), {
   if (n !== undefined) {
     return n;
   }
-  n = wasmFunctionType(wasmTable.get(func)).parameters.length;
+  n = Module.PyEM_CountArgs(func);
   _PyEM_CountFuncParams.cache.set(func, n);
   return n;
 }
-- 
2.34.1

