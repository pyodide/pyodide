[{"comment": "/**\n * A promise that resolves to ``undefined`` when Pyodide is finished loading.\n *\n * @type Promise\n */", "meta": {"range": [165, 26495], "filename": "pyodide.js", "lineno": 10, "columnno": 0, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000003", "name": "globalThis.languagePluginLoader", "type": "CallExpression", "value": "", "paramnames": []}}, "description": "A promise that resolves to ``undefined`` when Pyodide is finished loading.", "type": {"names": ["Promise"]}, "name": "languagePluginLoader", "longname": "globalThis.languagePluginLoader", "kind": "member", "memberof": "globalThis", "scope": "static"}, {"comment": "", "meta": {"range": [220, 231], "filename": "pyodide.js", "lineno": 11, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000011", "name": "Module", "type": "ObjectExpression", "value": "{}"}}, "undocumented": true, "name": "Module", "longname": "<anonymous>~Module", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [413, 473], "filename": "pyodide.js", "lineno": 15, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000015", "name": "baseURL", "type": "LogicalExpression", "value": ""}}, "undocumented": true, "name": "baseURL", "longname": "<anonymous>~baseURL", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [477, 536], "filename": "pyodide.js", "lineno": 16, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000023", "name": "baseURL", "type": "BinaryExpression", "funcscope": "<anonymous>", "value": "", "paramnames": []}}, "undocumented": true, "name": "baseURL", "longname": "<anonymous>~baseURL", "kind": "member", "memberof": "<anonymous>", "scope": "inner"}, {"comment": "", "meta": {"range": [631, 666], "filename": "pyodide.js", "lineno": 20, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000038", "name": "DEFAULT_CHANNEL", "type": "Literal", "value": "default channel"}}, "undocumented": true, "name": "DEFAULT_CHANNEL", "longname": "<anonymous>~DEFAULT_CHANNEL", "kind": "constant", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [725, 811], "filename": "pyodide.js", "lineno": 23, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000042", "name": "package_uri_regexp", "type": "NewExpression", "value": ""}}, "undocumented": true, "name": "package_uri_regexp", "longname": "<anonymous>~package_uri_regexp", "kind": "constant", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [820, 1094], "filename": "pyodide.js", "lineno": 26, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000049", "name": "_uri_to_package_name", "type": "ArrowFunctionExpression"}, "vars": {"match": "<anonymous>~_uri_to_package_name~match"}}, "undocumented": true, "name": "_uri_to_package_name", "longname": "<anonymous>~_uri_to_package_name", "kind": "function", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [920, 964], "filename": "pyodide.js", "lineno": 28, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000062", "name": "match", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "match", "longname": "<anonymous>~_uri_to_package_name~match", "kind": "member", "memberof": "<anonymous>~_uri_to_package_name", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1103, 1113], "filename": "pyodide.js", "lineno": 36, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000077", "name": "loadScript"}}, "undocumented": true, "name": "loadScript", "longname": "<anonymous>~loadScript", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1153, 1394], "filename": "pyodide.js", "lineno": 38, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000085", "name": "loadScript", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": ["url"]}, "vars": {"": null}}, "undocumented": true, "name": "loadScript", "longname": "<anonymous>~loadScript", "kind": "function", "memberof": "<anonymous>", "scope": "inner"}, {"comment": "", "meta": {"range": [1215, 1261], "filename": "pyodide.js", "lineno": 39, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000096", "name": "script", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "script", "longname": "<anonymous>~script", "kind": "constant", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1269, 1285], "filename": "pyodide.js", "lineno": 40, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000106", "name": "script.src", "type": "Identifier", "funcscope": "<anonymous>", "value": "url", "paramnames": []}}, "undocumented": true, "name": "src", "longname": "<anonymous>~script.src", "kind": "member", "memberof": "<anonymous>~script", "scope": "static"}, {"comment": "", "meta": {"range": [1293, 1312], "filename": "pyodide.js", "lineno": 41, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000112", "name": "script.onload", "type": "Identifier", "funcscope": "<anonymous>", "value": "res", "paramnames": []}}, "undocumented": true, "name": "onload", "longname": "<anonymous>~script.onload", "kind": "member", "memberof": "<anonymous>~script", "scope": "static"}, {"comment": "", "meta": {"range": [1320, 1340], "filename": "pyodide.js", "lineno": 42, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000118", "name": "script.onerror", "type": "Identifier", "funcscope": "<anonymous>", "value": "rej", "paramnames": []}}, "undocumented": true, "name": "onerror", "longname": "<anonymous>~script.onerror", "kind": "member", "memberof": "<anonymous>~script", "scope": "static"}, {"comment": "", "meta": {"range": [1448, 1553], "filename": "pyodide.js", "lineno": 46, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000139", "name": "loadScript", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": ["url"]}}, "undocumented": true, "name": "loadScript", "longname": "<anonymous>~loadScript", "kind": "function", "memberof": "<anonymous>", "scope": "inner"}, {"comment": "", "meta": {"range": [1633, 3256], "filename": "pyodide.js", "lineno": 53, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000155", "name": "recursiveDependencies", "type": "FunctionDeclaration", "paramnames": ["names", "_messageCallback", "errorCallback", "sharedLibsOnly"]}, "vars": {"packages": "<anonymous>~recursiveDependencies~packages", "loadedPackages": "<anonymous>~recursiveDependencies~loadedPackages", "sharedLibraries": "<anonymous>~recursiveDependencies~sharedLibraries", "toLoad": "<anonymous>~recursiveDependencies~toLoad", "addPackage": "<anonymous>~recursiveDependencies~addPackage", "": null, "name": "<anonymous>~recursiveDependencies~name", "pkgname": "<anonymous>~recursiveDependencies~pkgname", "onlySharedLibs": "<anonymous>~recursiveDependencies~onlySharedLibs", "c": "<anonymous>~recursiveDependencies~c"}}, "undocumented": true, "name": "recursiveDependencies", "longname": "<anonymous>~recursiveDependencies", "kind": "function", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1765, 1818], "filename": "pyodide.js", "lineno": 55, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000163", "name": "packages", "type": "MemberExpression", "value": "self.pyodide._module.packages.dependencies"}}, "undocumented": true, "name": "packages", "longname": "<anonymous>~recursiveDependencies~packages", "kind": "constant", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1830, 1874], "filename": "pyodide.js", "lineno": 56, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000175", "name": "loadedPackages", "type": "MemberExpression", "value": "self.pyodide.loadedPackages"}}, "undocumented": true, "name": "loadedPackages", "longname": "<anonymous>~recursiveDependencies~loadedPackages", "kind": "constant", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1886, 1948], "filename": "pyodide.js", "lineno": 57, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000183", "name": "sharedLibraries", "type": "MemberExpression", "value": "self.pyodide._module.packages.shared_library"}}, "undocumented": true, "name": "sharedLibraries", "longname": "<anonymous>~recursiveDependencies~sharedLibraries", "kind": "constant", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1960, 1978], "filename": "pyodide.js", "lineno": 58, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000195", "name": "toLoad", "type": "NewExpression", "value": ""}}, "undocumented": true, "name": "toLoad", "longname": "<anonymous>~recursiveDependencies~toLoad", "kind": "constant", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [1991, 2486], "filename": "pyodide.js", "lineno": 60, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000200", "name": "addPackage", "type": "ArrowFunctionExpression"}, "vars": {"dep": "<anonymous>~recursiveDependencies~addPackage~dep"}}, "undocumented": true, "name": "addPackage", "longname": "<anonymous>~recursiveDependencies~addPackage", "kind": "function", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [2424, 2427], "filename": "pyodide.js", "lineno": 71, "columnno": 15, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000230", "name": "dep"}}, "undocumented": true, "name": "dep", "longname": "<anonymous>~recursiveDependencies~addPackage~dep", "kind": "member", "memberof": "<anonymous>~recursiveDependencies~addPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [2501, 2505], "filename": "pyodide.js", "lineno": 75, "columnno": 13, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000242", "name": "name"}}, "undocumented": true, "name": "name", "longname": "<anonymous>~recursiveDependencies~name", "kind": "member", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [2530, 2566], "filename": "pyodide.js", "lineno": 76, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000247", "name": "pkgname", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "pkgname", "longname": "<anonymous>~recursiveDependencies~pkgname", "kind": "constant", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [3030, 3056], "filename": "pyodide.js", "lineno": 91, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000316", "name": "onlySharedLibs", "type": "NewExpression", "funcscope": "<anonymous>~recursiveDependencies", "value": "", "paramnames": []}}, "undocumented": true, "name": "onlySharedLibs", "longname": "<anonymous>~recursiveDependencies~onlySharedLibs", "kind": "member", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner"}, {"comment": "", "meta": {"range": [3073, 3074], "filename": "pyodide.js", "lineno": 92, "columnno": 15, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000322", "name": "c"}}, "undocumented": true, "name": "c", "longname": "<anonymous>~recursiveDependencies~c", "kind": "member", "memberof": "<anonymous>~recursiveDependencies", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [3260, 8257], "filename": "pyodide.js", "lineno": 102, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000352", "name": "_loadPackage", "type": "FunctionDeclaration", "paramnames": ["names", "messageCallback", "errorCallback"]}, "vars": {"toLoad": "<anonymous>~_loadPackage~toLoad", "Module.locateFile": "<anonymous>~Module.locateFile", "": null, "windowErrorHandler": "<anonymous>~_loadPackage~windowErrorHandler", "windowErrorPromise": "<anonymous>~_loadPackage~windowErrorPromise", "scriptPromises": "<anonymous>~_loadPackage~scriptPromises", "undefined": null, "loaded": "<anonymous>~_loadPackage~loaded", "scriptSrc": "<anonymous>~_loadPackage~scriptSrc", "waitRunDependency": "<anonymous>~_loadPackage~waitRunDependency", "successPromise": "<anonymous>~_loadPackage~successPromise", "packageList": "<anonymous>~_loadPackage~packageList", "self.pyodide.loadedPackages[undefined]": "self.pyodide.loadedPackages[undefined]", "resolveMsg": "<anonymous>~_loadPackage~resolveMsg", "package_names": "<anonymous>~_loadPackage~package_names"}}, "undocumented": true, "name": "_loadPackage", "longname": "<anonymous>~_loadPackage", "kind": "function", "memberof": "<anonymous>", "scope": "inner", "params": [], "async": true}, {"comment": "", "meta": {"range": [3380, 3449], "filename": "pyodide.js", "lineno": 104, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000359", "name": "toLoad", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "toLoad", "longname": "<anonymous>~_loadPackage~toLoad", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [3562, 3916], "filename": "pyodide.js", "lineno": 108, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000367", "name": "Module.locateFile", "type": "ArrowFunctionExpression", "paramnames": ["path"]}, "vars": {"pkg": "<anonymous>~Module.locateFile~pkg", "package_uri": "<anonymous>~Module.locateFile~package_uri"}}, "undocumented": true, "name": "locateFile", "longname": "<anonymous>~Module.locateFile", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [3653, 3686], "filename": "pyodide.js", "lineno": 110, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000375", "name": "pkg", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "pkg", "longname": "<anonymous>~Module.locateFile~pkg", "kind": "member", "memberof": "<anonymous>~Module.locateFile", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [3729, 3758], "filename": "pyodide.js", "lineno": 112, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000391", "name": "package_uri", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "package_uri", "longname": "<anonymous>~Module.locateFile~package_uri", "kind": "member", "memberof": "<anonymous>~Module.locateFile", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [4557, 4575], "filename": "pyodide.js", "lineno": 134, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000447", "name": "windowErrorHandler"}}, "undocumented": true, "name": "windowErrorHandler", "longname": "<anonymous>~_loadPackage~windowErrorHandler", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [4585, 4603], "filename": "pyodide.js", "lineno": 135, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000450", "name": "windowErrorPromise"}}, "undocumented": true, "name": "windowErrorPromise", "longname": "<anonymous>~_loadPackage~windowErrorPromise", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [4636, 5053], "filename": "pyodide.js", "lineno": 137, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000458", "name": "windowErrorPromise", "type": "NewExpression", "funcscope": "<anonymous>~_loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "windowErrorPromise", "longname": "<anonymous>~_loadPackage~windowErrorPromise", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [4694, 4983], "filename": "pyodide.js", "lineno": 138, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000467", "name": "windowErrorHandler", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": ["e"]}}, "undocumented": true, "name": "windowErrorHandler", "longname": "<anonymous>~windowErrorHandler", "kind": "function", "memberof": "<anonymous>", "scope": "inner"}, {"comment": "", "meta": {"range": [5128, 5170], "filename": "pyodide.js", "lineno": 148, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000495", "name": "windowErrorPromise", "type": "NewExpression", "funcscope": "<anonymous>~_loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "windowErrorPromise", "longname": "<anonymous>~_loadPackage~windowErrorPromise", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [5335, 5354], "filename": "pyodide.js", "lineno": 153, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000502", "name": "scriptPromises", "type": "ArrayExpression", "value": "[]"}}, "undocumented": true, "name": "scriptPromises", "longname": "<anonymous>~_loadPackage~scriptPromises", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [5404, 5445], "filename": "pyodide.js", "lineno": 156, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000512", "name": "loaded", "type": "MemberExpression", "value": "self.pyodide.loadedPackages[undefined]"}}, "undocumented": true, "name": "loaded", "longname": "<anonymous>~_loadPackage~loaded", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [6038, 6103], "filename": "pyodide.js", "lineno": 170, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000559", "name": "scriptSrc", "type": "ConditionalExpression", "value": ""}}, "undocumented": true, "name": "scriptSrc", "longname": "<anonymous>~_loadPackage~scriptSrc", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [6611, 7106], "filename": "pyodide.js", "lineno": 182, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000607", "name": "waitRunDependency", "type": "FunctionDeclaration", "paramnames": []}, "vars": {"promise": "<anonymous>~_loadPackage~waitRunDependency~promise", "": null}}, "undocumented": true, "name": "waitRunDependency", "longname": "<anonymous>~_loadPackage~waitRunDependency", "kind": "function", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [6654, 6805], "filename": "pyodide.js", "lineno": 183, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000611", "name": "promise", "type": "NewExpression", "value": ""}}, "undocumented": true, "name": "promise", "longname": "<anonymous>~_loadPackage~waitRunDependency~promise", "kind": "constant", "memberof": "<anonymous>~_loadPackage~waitRunDependency", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [6691, 6795], "filename": "pyodide.js", "lineno": 184, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000619", "name": "Module.monitorRunDependencies", "type": "ArrowFunctionExpression", "paramnames": ["n"]}}, "undocumented": true, "name": "monitorRunDependencies", "longname": "<anonymous>~Module.monitorRunDependencies", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [7308, 7376], "filename": "pyodide.js", "lineno": 201, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000649", "name": "successPromise", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "successPromise", "longname": "<anonymous>~_loadPackage~successPromise", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [7632, 7648], "filename": "pyodide.js", "lineno": 211, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000688", "name": "packageList", "type": "ArrayExpression", "value": "[]"}}, "undocumented": true, "name": "packageList", "longname": "<anonymous>~_loadPackage~packageList", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [7693, 7731], "filename": "pyodide.js", "lineno": 213, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000698", "name": "self.pyodide.loadedPackages[undefined]", "type": "Identifier", "value": "uri", "paramnames": []}}, "undocumented": true, "name": "loadedPackages[undefined]", "longname": "self.pyodide.loadedPackages[undefined]", "kind": "member", "memberof": "self.pyodide", "scope": "static"}, {"comment": "", "meta": {"range": [7777, 7787], "filename": "pyodide.js", "lineno": 217, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000714", "name": "resolveMsg"}}, "undocumented": true, "name": "resolveMsg", "longname": "<anonymous>~_loadPackage~resolveMsg", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [7833, 7871], "filename": "pyodide.js", "lineno": 219, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000724", "name": "package_names", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "package_names", "longname": "<anonymous>~_loadPackage~package_names", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [7879, 7915], "filename": "pyodide.js", "lineno": 220, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000732", "name": "resolveMsg", "type": "TemplateLiteral", "funcscope": "<anonymous>~_loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "resolveMsg", "longname": "<anonymous>~_loadPackage~resolveMsg", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [7936, 7969], "filename": "pyodide.js", "lineno": 222, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000740", "name": "resolveMsg", "type": "Literal", "funcscope": "<anonymous>~_loadPackage", "value": "No packages loaded", "paramnames": []}}, "undocumented": true, "name": "resolveMsg", "longname": "<anonymous>~_loadPackage~resolveMsg", "kind": "member", "memberof": "<anonymous>~_loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [8367, 8403], "filename": "pyodide.js", "lineno": 237, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000762", "name": "loadPackageChain", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "loadPackageChain", "longname": "<anonymous>~loadPackageChain", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "/**\n   *\n   * The list of packages that Pyodide has loaded.\n   * Use ``Object.keys(pyodide.loadedPackages)`` to get the list of names of\n   * loaded packages, and ``pyodide.loadedPackages[package_name]`` to access\n   * install location for a particular ``package_name``.\n   *\n   * @type {object}\n   */", "meta": {"range": [8712, 8738], "filename": "pyodide.js", "lineno": 248, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000769", "name": "Module.loadedPackages", "type": "ObjectExpression", "funcscope": "<anonymous>", "value": "{}", "paramnames": []}}, "description": "The list of packages that Pyodide has loaded.\nUse ``Object.keys(pyodide.loadedPackages)`` to get the list of names of\nloaded packages, and ``pyodide.loadedPackages[package_name]`` to access\ninstall location for a particular ``package_name``.", "type": {"names": ["object"]}, "name": "loadedPackages", "longname": "<anonymous>~Module.loadedPackages", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   * Load a package or a list of packages over the network.\n   * This makes the files for the package available in the virtual filesystem.\n   * The package needs to be imported from Python before it can be used.\n   * @param {String | Array} names package name, or URL. Can be either a single\n   * element, or an array\n   * @param {function} messageCallback A callback, called with progress messages\n   * (optional)\n   * @param {function} errorCallback A callback, called with error/warning\n   * messages (optional)\n   * @returns {Promise} Resolves to ``undefined`` when loading is complete\n   */", "meta": {"range": [9345, 11911], "filename": "pyodide.js", "lineno": 262, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000775", "name": "Module.loadPackage", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["names", "messageCallback", "errorCallback"]}, "vars": {"names": "<anonymous>~Module.loadPackage~names", "sharedLibraryNames": "<anonymous>~Module.loadPackage~sharedLibraryNames", "sharedLibraryPackagesToLoad": "<anonymous>~Module.loadPackage~sharedLibraryPackagesToLoad", "oldPlugin": "<anonymous>~Module.loadPackage~oldPlugin", "p": "<anonymous>~Module.loadPackage~p", "dynamicLoadHandler": "<anonymous>~Module.loadPackage~dynamicLoadHandler", "": null, "loadPluginOverride": "<anonymous>~Module.loadPackage~loadPluginOverride", "promise": "<anonymous>~Module.loadPackage~promise", "loadPackageChain": "<anonymous>~Module.loadPackage~loadPackageChain"}}, "description": "Load a package or a list of packages over the network.\nThis makes the files for the package available in the virtual filesystem.\nThe package needs to be imported from Python before it can be used.", "params": [{"type": {"names": ["String", "Array"]}, "description": "package name, or URL. Can be either a single\nelement, or an array", "name": "names"}, {"type": {"names": ["function"]}, "description": "A callback, called with progress messages\n(optional)", "name": "messageCallback"}, {"type": {"names": ["function"]}, "description": "A callback, called with error/warning\nmessages (optional)", "name": "errorCallback"}], "returns": [{"type": {"names": ["Promise"]}, "description": "Resolves to ``undefined`` when loading is complete"}], "name": "loadPackage", "longname": "<anonymous>~Module.loadPackage", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [9467, 9484], "filename": "pyodide.js", "lineno": 265, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000793", "name": "names", "type": "ArrayExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "[\"names\"]", "paramnames": []}}, "undocumented": true, "name": "names", "longname": "<anonymous>~Module.loadPackage~names", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [9617, 9640], "filename": "pyodide.js", "lineno": 269, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000798", "name": "sharedLibraryNames", "type": "ArrayExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "[]", "paramnames": []}}, "undocumented": true, "name": "sharedLibraryNames", "longname": "<anonymous>~Module.loadPackage~sharedLibraryNames", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [9658, 9764], "filename": "pyodide.js", "lineno": 271, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000804", "name": "sharedLibraryPackagesToLoad", "type": "CallExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "sharedLibraryPackagesToLoad", "longname": "<anonymous>~Module.loadPackage~sharedLibraryPackagesToLoad", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [10448, 10457], "filename": "pyodide.js", "lineno": 287, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000826", "name": "oldPlugin"}}, "undocumented": true, "name": "oldPlugin", "longname": "<anonymous>~Module.loadPackage~oldPlugin", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [10472, 10473], "filename": "pyodide.js", "lineno": 288, "columnno": 13, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000830", "name": "p"}}, "undocumented": true, "name": "p", "longname": "<anonymous>~Module.loadPackage~p", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [10569, 10605], "filename": "pyodide.js", "lineno": 290, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000848", "name": "oldPlugin", "type": "MemberExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "Module.preloadPlugins[undefined]", "paramnames": []}}, "undocumented": true, "name": "oldPlugin", "longname": "<anonymous>~Module.loadPackage~oldPlugin", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [10644, 11154], "filename": "pyodide.js", "lineno": 294, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000857", "name": "dynamicLoadHandler", "type": "ObjectExpression", "value": "{\"get\":\"\"}"}}, "undocumented": true, "name": "dynamicLoadHandler", "longname": "<anonymous>~Module.loadPackage~dynamicLoadHandler", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [10673, 11148], "filename": "pyodide.js", "lineno": 295, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000860", "name": "get", "type": "FunctionExpression"}, "vars": {"": null}}, "undocumented": true, "name": "get", "longname": "<anonymous>~Module.loadPackage~dynamicLoadHandler.get", "kind": "function", "memberof": "<anonymous>~Module.loadPackage~dynamicLoadHandler", "scope": "static"}, {"comment": "", "meta": {"range": [10832, 11072], "filename": "pyodide.js", "lineno": 299, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000885", "name": "this[\"asyncWasmLoadPromise\"]", "type": "CallExpression", "value": "", "paramnames": []}}, "undocumented": true, "name": "\"asyncWasmLoadPromise\"", "longname": "<anonymous>~Module.loadPackage~dynamicLoadHandler.get#\"asyncWasmLoadPromise\"", "kind": "member", "memberof": "<anonymous>~Module.loadPackage~dynamicLoadHandler.get", "scope": "instance"}, {"comment": "", "meta": {"range": [11021, 11034], "filename": "pyodide.js", "lineno": 302, "columnno": 45, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000904", "name": "global", "type": "Literal", "value": true}}, "undocumented": true, "name": "global", "longname": "global", "kind": "member", "scope": "global"}, {"comment": "", "meta": {"range": [11036, 11051], "filename": "pyodide.js", "lineno": 302, "columnno": 60, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000906", "name": "nodelete", "type": "Literal", "value": true}}, "undocumented": true, "name": "nodelete", "longname": "nodelete", "kind": "member", "scope": "global"}, {"comment": "", "meta": {"range": [11164, 11225], "filename": "pyodide.js", "lineno": 310, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000914", "name": "loadPluginOverride", "type": "NewExpression", "value": ""}}, "undocumented": true, "name": "loadPluginOverride", "longname": "<anonymous>~Module.loadPackage~loadPluginOverride", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [11325, 11496], "filename": "pyodide.js", "lineno": 314, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000929", "name": "promise", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "promise", "longname": "<anonymous>~Module.loadPackage~promise", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [11502, 11573], "filename": "pyodide.js", "lineno": 317, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000950", "name": "loadPackageChain", "type": "CallExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "loadPackageChain", "longname": "<anonymous>~Module.loadPackage~loadPackageChain", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [11652, 11810], "filename": "pyodide.js", "lineno": 321, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000975", "name": "promise", "type": "CallExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "promise", "longname": "<anonymous>~Module.loadPackage~promise", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [11816, 11887], "filename": "pyodide.js", "lineno": 324, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100000996", "name": "loadPackageChain", "type": "CallExpression", "funcscope": "<anonymous>~Module.loadPackage", "value": "", "paramnames": []}}, "undocumented": true, "name": "loadPackageChain", "longname": "<anonymous>~Module.loadPackage~loadPackageChain", "kind": "member", "memberof": "<anonymous>~Module.loadPackage", "scope": "inner"}, {"comment": "", "meta": {"range": [12010, 12765], "filename": "pyodide.js", "lineno": 330, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001012", "name": "fixRecursionLimit", "type": "FunctionDeclaration", "paramnames": ["pyodide"]}, "vars": {"depth": "<anonymous>~fixRecursionLimit~depth", "recurse": "<anonymous>~fixRecursionLimit~recurse", "recursionLimit": "<anonymous>~fixRecursionLimit~recursionLimit"}}, "undocumented": true, "name": "fixRecursionLimit", "longname": "<anonymous>~fixRecursionLimit", "kind": "function", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [12419, 12428], "filename": "pyodide.js", "lineno": 337, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001017", "name": "depth", "type": "Literal", "value": 0}}, "undocumented": true, "name": "depth", "longname": "<anonymous>~fixRecursionLimit~depth", "kind": "member", "memberof": "<anonymous>~fixRecursionLimit", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [12434, 12495], "filename": "pyodide.js", "lineno": 338, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001020", "name": "recurse", "type": "FunctionDeclaration", "paramnames": []}, "vars": {"depth": "<anonymous>~fixRecursionLimit~recurse~depth"}}, "undocumented": true, "name": "recurse", "longname": "<anonymous>~fixRecursionLimit~recurse", "kind": "function", "memberof": "<anonymous>~fixRecursionLimit", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [12461, 12471], "filename": "pyodide.js", "lineno": 339, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001024", "name": "depth", "type": "Literal", "funcscope": "<anonymous>~fixRecursionLimit~recurse", "value": 1, "paramnames": []}}, "undocumented": true, "name": "depth", "longname": "<anonymous>~fixRecursionLimit~recurse~depth", "kind": "member", "memberof": "<anonymous>~fixRecursionLimit~recurse", "scope": "inner"}, {"comment": "", "meta": {"range": [12566, 12593], "filename": "pyodide.js", "lineno": 348, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001038", "name": "recursionLimit", "type": "BinaryExpression", "value": ""}}, "undocumented": true, "name": "recursionLimit", "longname": "<anonymous>~fixRecursionLimit~recursionLimit", "kind": "member", "memberof": "<anonymous>~fixRecursionLimit", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [12634, 12655], "filename": "pyodide.js", "lineno": 350, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001049", "name": "recursionLimit", "type": "Literal", "funcscope": "<anonymous>~fixRecursionLimit", "value": 1000, "paramnames": []}}, "undocumented": true, "name": "recursionLimit", "longname": "<anonymous>~fixRecursionLimit~recursionLimit", "kind": "member", "memberof": "<anonymous>~fixRecursionLimit", "scope": "inner"}, {"comment": "", "meta": {"range": [12899, 13167], "filename": "pyodide.js", "lineno": 359, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001063", "name": "PUBLIC_API", "type": "ArrayExpression", "value": "[\"globals\",\"loadPackage\",\"loadPackagesFromImports\",\"loadedPackages\",\"pyimport\",\"runPython\",\"runPythonAsync\",\"version\",\"registerJsModule\",\"unregisterJsModule\",\"setInterruptBuffer\",\"pyodide_py\"]"}}, "undocumented": true, "name": "PUBLIC_API", "longname": "<anonymous>~PUBLIC_API", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [13193, 13417], "filename": "pyodide.js", "lineno": 375, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001078", "name": "makePublicAPI", "type": "FunctionDeclaration", "paramnames": ["module", "public_api"]}, "vars": {"namespace": "<anonymous>~makePublicAPI~namespace", "module.public_api": "module.public_api", "name": "<anonymous>~makePublicAPI~name", "namespace[undefined]": "<anonymous>~makePublicAPI~namespace.undefined]"}}, "undocumented": true, "name": "makePublicAPI", "longname": "<anonymous>~makePublicAPI", "kind": "function", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [13246, 13276], "filename": "pyodide.js", "lineno": 376, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001084", "name": "namespace", "type": "ObjectExpression", "value": "{\"_module\":\"\"}"}}, "undocumented": true, "name": "namespace", "longname": "<anonymous>~makePublicAPI~namespace", "kind": "member", "memberof": "<anonymous>~makePublicAPI", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [13259, 13275], "filename": "pyodide.js", "lineno": 376, "columnno": 21, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001087", "name": "_module", "type": "Identifier", "value": "module"}}, "undocumented": true, "name": "_module", "longname": "<anonymous>~makePublicAPI~namespace._module", "kind": "member", "memberof": "<anonymous>~makePublicAPI~namespace", "scope": "static"}, {"comment": "", "meta": {"range": [13282, 13311], "filename": "pyodide.js", "lineno": 377, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001090", "name": "module.public_api", "type": "Identifier", "value": "namespace", "paramnames": []}}, "undocumented": true, "name": "public_api", "longname": "module.public_api", "kind": "member", "memberof": "module", "scope": "static"}, {"comment": "", "meta": {"range": [13326, 13330], "filename": "pyodide.js", "lineno": 378, "columnno": 13, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001097", "name": "name"}}, "undocumented": true, "name": "name", "longname": "<anonymous>~makePublicAPI~name", "kind": "member", "memberof": "<anonymous>~makePublicAPI", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [13354, 13384], "filename": "pyodide.js", "lineno": 379, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001102", "name": "namespace[undefined]", "type": "MemberExpression", "funcscope": "<anonymous>~makePublicAPI", "value": "module[undefined]", "paramnames": []}}, "undocumented": true, "name": "undefined]", "longname": "<anonymous>~makePublicAPI~namespace.undefined]", "kind": "member", "memberof": "<anonymous>~makePublicAPI~namespace", "scope": "static"}, {"comment": "", "meta": {"range": [13505, 13525], "filename": "pyodide.js", "lineno": 386, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001112", "name": "self.Module", "type": "Identifier", "value": "Module", "paramnames": []}}, "undocumented": true, "name": "Module", "longname": "self.Module", "kind": "member", "memberof": "self", "scope": "static"}, {"comment": "", "meta": {"range": [13530, 13559], "filename": "pyodide.js", "lineno": 388, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001118", "name": "Module.noImageDecoding", "type": "Literal", "funcscope": "<anonymous>", "value": true, "paramnames": []}}, "undocumented": true, "name": "noImageDecoding", "longname": "<anonymous>~Module.noImageDecoding", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [13563, 13592], "filename": "pyodide.js", "lineno": 389, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001124", "name": "Module.noAudioDecoding", "type": "Literal", "funcscope": "<anonymous>", "value": true, "paramnames": []}}, "undocumented": true, "name": "noAudioDecoding", "longname": "<anonymous>~Module.noAudioDecoding", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [13596, 13631], "filename": "pyodide.js", "lineno": 390, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001130", "name": "Module.noWasmDecoding", "type": "Literal", "funcscope": "<anonymous>", "value": false, "paramnames": []}}, "undocumented": true, "name": "noWasmDecoding", "longname": "<anonymous>~Module.noWasmDecoding", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [13684, 13709], "filename": "pyodide.js", "lineno": 392, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001136", "name": "Module.preloadedWasm", "type": "ObjectExpression", "funcscope": "<anonymous>", "value": "{}", "paramnames": []}}, "undocumented": true, "name": "preloadedWasm", "longname": "<anonymous>~Module.preloadedWasm", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [13718, 13746], "filename": "pyodide.js", "lineno": 394, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001142", "name": "fatal_error_occurred", "type": "Literal", "value": false}}, "undocumented": true, "name": "fatal_error_occurred", "longname": "<anonymous>~fatal_error_occurred", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [13754, 13891], "filename": "pyodide.js", "lineno": 395, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001146", "name": "fatal_error_msg", "type": "BinaryExpression", "value": ""}}, "undocumented": true, "name": "fatal_error_msg", "longname": "<anonymous>~fatal_error_msg", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [13895, 14734], "filename": "pyodide.js", "lineno": 398, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001152", "name": "Module.fatal_error", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["e"]}, "vars": {"fatal_error_occurred": "<anonymous>~Module.fatal_error~fatal_error_occurred", "undefined": null, "Module.public_api[undefined]": "<anonymous>~Module.public_api[undefined]", "": null}}, "undocumented": true, "name": "fatal_error", "longname": "<anonymous>~Module.fatal_error", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [14040, 14067], "filename": "pyodide.js", "lineno": 403, "columnno": 4, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001170", "name": "fatal_error_occurred", "type": "Literal", "funcscope": "<anonymous>~Module.fatal_error", "value": true, "paramnames": []}}, "undocumented": true, "name": "fatal_error_occurred", "longname": "<anonymous>~Module.fatal_error~fatal_error_occurred", "kind": "member", "memberof": "<anonymous>~Module.fatal_error", "scope": "inner"}, {"comment": "", "meta": {"range": [14606, 14675], "filename": "pyodide.js", "lineno": 419, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001230", "name": "Module.public_api[undefined]", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": []}}, "undocumented": true, "name": "public_api[undefined]", "longname": "<anonymous>~Module.public_api[undefined]", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   * An alias to the Python pyodide package.\n   *\n   * @type {PyProxy}\n   */", "meta": {"range": [14822, 14844], "filename": "pyodide.js", "lineno": 432, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001246", "name": "Module.pyodide_py", "type": "ObjectExpression", "funcscope": "<anonymous>", "value": "{}", "paramnames": []}}, "description": "An alias to the Python pyodide package.", "type": {"names": ["PyProxy"]}, "name": "pyodide_py", "longname": "<anonymous>~Module.pyodide_py", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   *\n   * An alias to the global Python namespace.\n   *\n   * An object whose attributes are members of the Python global namespace. This\n   * is an alternative to :meth:`pyimport`. For example, to access the ``foo``\n   * Python object from Javascript use\n   * ``pyodide.globals.get(\"foo\")``\n   *\n   * @type {PyProxy}\n   */", "meta": {"range": [15207, 15226], "filename": "pyodide.js", "lineno": 445, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001252", "name": "Module.globals", "type": "ObjectExpression", "funcscope": "<anonymous>", "value": "{}", "paramnames": []}}, "description": "An alias to the global Python namespace.\n\nAn object whose attributes are members of the Python global namespace. This\nis an alternative to :meth:`pyimport`. For example, to access the ``foo``\nPython object from Javascript use\n``pyodide.globals.get(\"foo\")``", "type": {"names": ["PyProxy"]}, "name": "globals", "longname": "<anonymous>~Module.globals", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   *\n   * The pyodide version.\n   *\n   * It can be either the exact release version (e.g. ``0.1.0``), or\n   * the latest release version followed by the number of commits since, and\n   * the git hash of the current commit (e.g. ``0.1.0-1-bd84646``).\n   *\n   * @type {string}\n   */", "meta": {"range": [15547, 15566], "filename": "pyodide.js", "lineno": 457, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001258", "name": "Module.version", "type": "Literal", "funcscope": "<anonymous>", "value": "", "paramnames": []}}, "description": "The pyodide version.\n\nIt can be either the exact release version (e.g. ``0.1.0``), or\nthe latest release version followed by the number of commits since, and\nthe git hash of the current commit (e.g. ``0.1.0-1-bd84646``).", "type": {"names": ["string"]}, "name": "version", "longname": "<anonymous>~Module.version", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   * Run Python code in the simplest way possible. The primary purpose of this\n   * method is for bootstrapping. It is also useful for debugging: If the Python\n   * interpreter is initialized successfully then it should be possible to use\n   * this method to run Python code even if everything else in the Pyodide\n   * `core` module fails.\n   *\n   * The differences are:\n   *    1. `runPythonSimple` doesn't return anything (and so won't leak\n   *        PyProxies)\n   *    2. `runPythonSimple` doesn't require access to any state on the\n   *       `pyodide_js` module.\n   *    3. `runPython` uses `pyodide.eval_code`, whereas `runPythonSimple` uses\n   *       `PyRun_String` which is the C API for `eval` / `exec`.\n   *    4. `runPythonSimple` runs with `globals` a separate dict which is called\n   *       `init_dict` (keeps global state private)\n   *    5. `runPythonSimple` doesn't dedent the argument\n   *\n   * When `core` initialization is completed, the globals for `runPythonSimple`\n   * is made available as `Module.init_dict`.\n   *\n   * @private\n   */", "meta": {"range": [16668, 16888], "filename": "pyodide.js", "lineno": 482, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001264", "name": "Module.runPythonSimple", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["code"]}, "vars": {"code_c_string": "<anonymous>~Module.runPythonSimple~code_c_string"}}, "description": "Run Python code in the simplest way possible. The primary purpose of this\nmethod is for bootstrapping. It is also useful for debugging: If the Python\ninterpreter is initialized successfully then it should be possible to use\nthis method to run Python code even if everything else in the Pyodide\n`core` module fails.\n\nThe differences are:\n   1. `runPythonSimple` doesn't return anything (and so won't leak\n       PyProxies)\n   2. `runPythonSimple` doesn't require access to any state on the\n      `pyodide_js` module.\n   3. `runPython` uses `pyodide.eval_code`, whereas `runPythonSimple` uses\n      `PyRun_String` which is the C API for `eval` / `exec`.\n   4. `runPythonSimple` runs with `globals` a separate dict which is called\n      `init_dict` (keeps global state private)\n   5. `runPythonSimple` doesn't dedent the argument\n\nWhen `core` initialization is completed, the globals for `runPythonSimple`\nis made available as `Module.init_dict`.", "access": "private", "name": "runPythonSimple", "longname": "<anonymous>~Module.runPythonSimple", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [16718, 16762], "filename": "pyodide.js", "lineno": 483, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001272", "name": "code_c_string", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "code_c_string", "longname": "<anonymous>~Module.runPythonSimple~code_c_string", "kind": "member", "memberof": "<anonymous>~Module.runPythonSimple", "scope": "inner", "params": []}, {"comment": "/**\n   * Runs a string of Python code from Javascript.\n   *\n   * The last part of the string may be an expression, in which case, its value\n   * is returned.\n   *\n   * @param {string} code Python code to evaluate\n   * @returns The result of the python code converted to Javascript\n   */", "meta": {"range": [17182, 17302], "filename": "pyodide.js", "lineno": 500, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001295", "name": "Module.runPython", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["code", "globals"]}}, "description": "Runs a string of Python code from Javascript.\n\nThe last part of the string may be an expression, in which case, its value\nis returned.", "params": [{"type": {"names": ["string"]}, "description": "Python code to evaluate", "name": "code"}], "returns": [{"description": "The result of the python code converted to Javascript"}], "name": "runPython", "longname": "<anonymous>~Module.runPython", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   * Inspect a Python code chunk and use :js:func:`pyodide.loadPackage` to load any known \n   * packages that the code chunk imports. Uses \n   * :func:`pyodide_py.find_imports <pyodide.find\\_imports>` to inspect the code.\n   * \n   * For example, given the following code as input\n   * \n   * .. code-block:: python\n   * \n   *    import numpy as np\n   *    x = np.array([1, 2, 3])\n   * \n   * :js:func:`loadPackagesFromImports` will call ``pyodide.loadPackage(['numpy'])``.\n   * See also :js:func:`runPythonAsync`.\n   *\n   * @param {*} code \n   * @param {*} messageCallback \n   * @param {*} errorCallback \n   */", "meta": {"range": [17944, 18511], "filename": "pyodide.js", "lineno": 524, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001317", "name": "Module.loadPackagesFromImports", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["code", "messageCallback", "errorCallback"]}, "vars": {"imports": "<anonymous>~Module.loadPackagesFromImports~imports", "packageNames": "<anonymous>~Module.loadPackagesFromImports~packageNames", "packages": "<anonymous>~Module.loadPackagesFromImports~packages", "name": "<anonymous>~Module.loadPackagesFromImports~name"}}, "description": "Inspect a Python code chunk and use :js:func:`pyodide.loadPackage` to load any known \npackages that the code chunk imports. Uses \n:func:`pyodide_py.find_imports <pyodide.find\\_imports>` to inspect the code.\n\nFor example, given the following code as input\n\n.. code-block:: python\n\n   import numpy as np\n   x = np.array([1, 2, 3])\n\n:js:func:`loadPackagesFromImports` will call ``pyodide.loadPackage(['numpy'])``.\nSee also :js:func:`runPythonAsync`.", "params": [{"type": {"names": ["*"]}, "name": "code"}, {"type": {"names": ["*"]}, "name": "messageCallback"}, {"type": {"names": ["*"]}, "name": "errorCallback"}], "name": "loadPackagesFromImports", "longname": "<anonymous>~Module.loadPackagesFromImports", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [18041, 18094], "filename": "pyodide.js", "lineno": 525, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001327", "name": "imports", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "imports", "longname": "<anonymous>~Module.loadPackagesFromImports~imports", "kind": "member", "memberof": "<anonymous>~Module.loadPackagesFromImports", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [18156, 18214], "filename": "pyodide.js", "lineno": 529, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001348", "name": "packageNames", "type": "MemberExpression", "value": "Module.packages.import_name_to_package_name"}}, "undocumented": true, "name": "packageNames", "longname": "<anonymous>~Module.loadPackagesFromImports~packageNames", "kind": "member", "memberof": "<anonymous>~Module.loadPackagesFromImports", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [18224, 18244], "filename": "pyodide.js", "lineno": 530, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001356", "name": "packages", "type": "NewExpression", "value": ""}}, "undocumented": true, "name": "packages", "longname": "<anonymous>~Module.loadPackagesFromImports~packages", "kind": "member", "memberof": "<anonymous>~Module.loadPackagesFromImports", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [18259, 18263], "filename": "pyodide.js", "lineno": 531, "columnno": 13, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001362", "name": "name"}}, "undocumented": true, "name": "name", "longname": "<anonymous>~Module.loadPackagesFromImports~name", "kind": "member", "memberof": "<anonymous>~Module.loadPackagesFromImports", "scope": "inner", "params": []}, {"comment": "/**\n   * Access a Python object in the global namespace from Javascript.\n   * @param {string} name Python variable name\n   * @returns If the Python object is an immutable type (string, number,\n   * boolean), it is converted to Javascript and returned.  For other types, a\n   * ``PyProxy`` object is returned.\n   */", "meta": {"range": [18854, 18904], "filename": "pyodide.js", "lineno": 551, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001401", "name": "Module.pyimport", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": ["name"]}}, "description": "Access a Python object in the global namespace from Javascript.", "params": [{"type": {"names": ["string"]}, "description": "Python variable name", "name": "name"}], "returns": [{"description": "If the Python object is an immutable type (string, number,\nboolean), it is converted to Javascript and returned.  For other types, a\n``PyProxy`` object is returned."}], "name": "pyimport", "longname": "<anonymous>~Module.pyimport", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   * Runs Python code, possibly asynchronously loading any known packages that\n   * the code imports. For example, given the following code\n   *\n   * .. code-block:: python\n   *\n   *    import numpy as np\n   *    x = np.array([1, 2, 3])\n   *\n   * pyodide will first call ``pyodide.loadPackage(['numpy'])``, and then run\n   * the code, returning the result. Since package fetching must happen\n   * asynchronously, this function returns a `Promise` which resolves to the\n   * output. For example:\n   *\n   * .. code-block:: javascript\n   *\n   *    pyodide.runPythonAsync(code, messageCallback)\n   *           .then((output) => handleOutput(output))\n   *\n   * @param {string} code Python code to evaluate\n   * @param {Function} messageCallback A callback, called with progress\n   * messages. (optional)\n   * @param {Function} errorCallback A callback, called with error/warning\n   * messages. (optional)\n   */", "meta": {"range": [19821, 20176], "filename": "pyodide.js", "lineno": 578, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001415", "name": "Module.runPythonAsync", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["code", "messageCallback", "errorCallback"]}, "vars": {"coroutine": "<anonymous>~Module.runPythonAsync~coroutine", "result": "<anonymous>~Module.runPythonAsync~result"}}, "description": "Runs Python code, possibly asynchronously loading any known packages that\nthe code imports. For example, given the following code\n\n.. code-block:: python\n\n   import numpy as np\n   x = np.array([1, 2, 3])\n\npyodide will first call ``pyodide.loadPackage(['numpy'])``, and then run\nthe code, returning the result. Since package fetching must happen\nasynchronously, this function returns a `Promise` which resolves to the\noutput. For example:\n\n.. code-block:: javascript\n\n   pyodide.runPythonAsync(code, messageCallback)\n          .then((output) => handleOutput(output))", "params": [{"type": {"names": ["string"]}, "description": "Python code to evaluate", "name": "code"}, {"type": {"names": ["function"]}, "description": "A callback, called with progress\nmessages. (optional)", "name": "messageCallback"}, {"type": {"names": ["function"]}, "description": "A callback, called with error/warning\nmessages. (optional)", "name": "errorCallback"}], "name": "runPythonAsync", "longname": "<anonymous>~Module.runPythonAsync", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [19988, 20055], "filename": "pyodide.js", "lineno": 580, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001434", "name": "coroutine", "type": "CallExpression", "value": ""}}, "undocumented": true, "name": "coroutine", "longname": "<anonymous>~Module.runPythonAsync~coroutine", "kind": "member", "memberof": "<anonymous>~Module.runPythonAsync", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [20077, 20101], "filename": "pyodide.js", "lineno": 582, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001449", "name": "result", "type": "AwaitExpression", "value": ""}}, "undocumented": true, "name": "result", "longname": "<anonymous>~Module.runPythonAsync~result", "kind": "member", "memberof": "<anonymous>~Module.runPythonAsync", "scope": "inner", "params": []}, {"comment": "/**\n   * Registers the Js object ``module`` as a Js module with ``name``.\n   * This module can then be imported from Python using the standard Python\n   * import system. If another module by the same name has already been\n   * imported, this won't have much effect unless you also delete the imported\n   * module from\n   * ``sys.modules``. This calls the ``pyodide_py`` api\n   * :func:`pyodide.register_js_module`.\n   *\n   * @param {string} name Name of js module to add\n   * @param {object} module Javascript object backing the module\n   */", "meta": {"range": [20747, 20859], "filename": "pyodide.js", "lineno": 602, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001462", "name": "Module.registerJsModule", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["name", "module"]}}, "description": "Registers the Js object ``module`` as a Js module with ``name``.\nThis module can then be imported from Python using the standard Python\nimport system. If another module by the same name has already been\nimported, this won't have much effect unless you also delete the imported\nmodule from\n``sys.modules``. This calls the ``pyodide_py`` api\n:func:`pyodide.register_js_module`.", "params": [{"type": {"names": ["string"]}, "description": "Name of js module to add", "name": "name"}, {"type": {"names": ["object"]}, "description": "Javascript object backing the module", "name": "module"}], "name": "registerJsModule", "longname": "<anonymous>~Module.registerJsModule", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "/**\n   * Unregisters a Js module with given name that has been previously registered\n   * with :js:func:`pyodide.registerJsModule` or :func:`pyodide.register_js_module`. If\n   * a Js module with that name does not already exist, will throw an error.\n   * Note that if the module has already been imported, this won't have much\n   * effect unless you also delete the imported module from ``sys.modules``.\n   * This calls the\n   * ``pyodide_py`` api :func:`pyodide.unregister_js_module`.\n   *\n   * @param {string} name Name of js module to remove\n   */", "meta": {"range": [21417, 21517], "filename": "pyodide.js", "lineno": 617, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001480", "name": "Module.unregisterJsModule", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["name"]}}, "description": "Unregisters a Js module with given name that has been previously registered\nwith :js:func:`pyodide.registerJsModule` or :func:`pyodide.register_js_module`. If\na Js module with that name does not already exist, will throw an error.\nNote that if the module has already been imported, this won't have much\neffect unless you also delete the imported module from ``sys.modules``.\nThis calls the\n``pyodide_py`` api :func:`pyodide.unregister_js_module`.", "params": [{"type": {"names": ["string"]}, "description": "Name of js module to remove", "name": "name"}], "name": "unregisterJsModule", "longname": "<anonymous>~Module.unregisterJsModule", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [21543, 24666], "filename": "pyodide.js", "lineno": 622, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001496", "name": "Module.function_supports_kwargs", "type": "FunctionExpression", "funcscope": "<anonymous>", "paramnames": ["funcstr"]}, "vars": {"idx": "<anonymous>~Module.function_supports_kwargs~idx", "START_ARG": "<anonymous>~Module.function_supports_kwargs~START_ARG", "ARG": "<anonymous>~Module.function_supports_kwargs~ARG", "QUOTE": "<anonymous>~Module.function_supports_kwargs~QUOTE", "QUOTE_ESCAPE": "<anonymous>~Module.function_supports_kwargs~QUOTE_ESCAPE", "paren_depth": "<anonymous>~Module.function_supports_kwargs~paren_depth", "arg_start": "<anonymous>~Module.function_supports_kwargs~arg_start", "arg_is_obj_dest": "<anonymous>~Module.function_supports_kwargs~arg_is_obj_dest", "quote_start": "<anonymous>~Module.function_supports_kwargs~quote_start", "state": "<anonymous>~Module.function_supports_kwargs~state", "i": "<anonymous>~Module.function_supports_kwargs~i", "x": "<anonymous>~Module.function_supports_kwargs~x"}}, "undocumented": true, "name": "function_supports_kwargs", "longname": "<anonymous>~Module.function_supports_kwargs", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [21718, 21748], "filename": "pyodide.js", "lineno": 625, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001504", "name": "idx", "type": "BinaryExpression", "value": ""}}, "undocumented": true, "name": "idx", "longname": "<anonymous>~Module.function_supports_kwargs~idx", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22624, 22637], "filename": "pyodide.js", "lineno": 640, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001514", "name": "START_ARG", "type": "Literal", "value": 1}}, "undocumented": true, "name": "START_ARG", "longname": "<anonymous>~Module.function_supports_kwargs~START_ARG", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22647, 22654], "filename": "pyodide.js", "lineno": 641, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001518", "name": "ARG", "type": "Literal", "value": 2}}, "undocumented": true, "name": "ARG", "longname": "<anonymous>~Module.function_supports_kwargs~ARG", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22664, 22673], "filename": "pyodide.js", "lineno": 642, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001522", "name": "QUOTE", "type": "Literal", "value": 3}}, "undocumented": true, "name": "QUOTE", "longname": "<anonymous>~Module.function_supports_kwargs~QUOTE", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22683, 22699], "filename": "pyodide.js", "lineno": 643, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001526", "name": "QUOTE_ESCAPE", "type": "Literal", "value": 4}}, "undocumented": true, "name": "QUOTE_ESCAPE", "longname": "<anonymous>~Module.function_supports_kwargs~QUOTE_ESCAPE", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22709, 22724], "filename": "pyodide.js", "lineno": 644, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001530", "name": "paren_depth", "type": "Literal", "value": 0}}, "undocumented": true, "name": "paren_depth", "longname": "<anonymous>~Module.function_supports_kwargs~paren_depth", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22734, 22747], "filename": "pyodide.js", "lineno": 645, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001534", "name": "arg_start", "type": "Literal", "value": 0}}, "undocumented": true, "name": "arg_start", "longname": "<anonymous>~Module.function_supports_kwargs~arg_start", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22757, 22780], "filename": "pyodide.js", "lineno": 646, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001538", "name": "arg_is_obj_dest", "type": "Literal", "value": false}}, "undocumented": true, "name": "arg_is_obj_dest", "longname": "<anonymous>~Module.function_supports_kwargs~arg_is_obj_dest", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22790, 22813], "filename": "pyodide.js", "lineno": 647, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001542", "name": "quote_start", "type": "Identifier", "value": "undefined"}}, "undocumented": true, "name": "quote_start", "longname": "<anonymous>~Module.function_supports_kwargs~quote_start", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22823, 22840], "filename": "pyodide.js", "lineno": 648, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001546", "name": "state", "type": "Identifier", "value": "START_ARG"}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [22875, 22882], "filename": "pyodide.js", "lineno": 650, "columnno": 9, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001550", "name": "i", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "idx", "paramnames": []}}, "undocumented": true, "name": "i", "longname": "<anonymous>~Module.function_supports_kwargs~i", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [22921, 22935], "filename": "pyodide.js", "lineno": 651, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001562", "name": "x", "type": "MemberExpression", "value": "funcstr[undefined]"}}, "undocumented": true, "name": "x", "longname": "<anonymous>~Module.function_supports_kwargs~x", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [23066, 23077], "filename": "pyodide.js", "lineno": 656, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001577", "name": "state", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "ARG", "paramnames": []}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [23134, 23154], "filename": "pyodide.js", "lineno": 659, "columnno": 12, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001584", "name": "state", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "QUOTE_ESCAPE", "paramnames": []}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [23279, 23292], "filename": "pyodide.js", "lineno": 666, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001596", "name": "state", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "QUOTE", "paramnames": []}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [23824, 23841], "filename": "pyodide.js", "lineno": 681, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001640", "name": "state", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "START_ARG", "paramnames": []}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [24029, 24040], "filename": "pyodide.js", "lineno": 688, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001650", "name": "state", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "ARG", "paramnames": []}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [24050, 24077], "filename": "pyodide.js", "lineno": 689, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001654", "name": "arg_is_obj_dest", "type": "BinaryExpression", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "", "paramnames": []}}, "undocumented": true, "name": "arg_is_obj_dest", "longname": "<anonymous>~Module.function_supports_kwargs~arg_is_obj_dest", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [24375, 24388], "filename": "pyodide.js", "lineno": 700, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001688", "name": "state", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "QUOTE", "paramnames": []}}, "undocumented": true, "name": "state", "longname": "<anonymous>~Module.function_supports_kwargs~state", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [24400, 24415], "filename": "pyodide.js", "lineno": 701, "columnno": 10, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001692", "name": "quote_start", "type": "Identifier", "funcscope": "<anonymous>~Module.function_supports_kwargs", "value": "x", "paramnames": []}}, "undocumented": true, "name": "quote_start", "longname": "<anonymous>~Module.function_supports_kwargs~quote_start", "kind": "member", "memberof": "<anonymous>~Module.function_supports_kwargs", "scope": "inner"}, {"comment": "", "meta": {"range": [24671, 24715], "filename": "pyodide.js", "lineno": 711, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001701", "name": "Module.locateFile", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": ["path"]}}, "undocumented": true, "name": "locateFile", "longname": "<anonymous>~Module.locateFile", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [24724, 24775], "filename": "pyodide.js", "lineno": 713, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001711", "name": "moduleLoaded", "type": "NewExpression", "value": ""}}, "undocumented": true, "name": "moduleLoaded", "longname": "<anonymous>~moduleLoaded", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [24756, 24774], "filename": "pyodide.js", "lineno": 713, "columnno": 38, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001717", "name": "Module.postRun", "type": "Identifier", "funcscope": "<anonymous>", "value": "r", "paramnames": []}}, "undocumented": true, "name": "postRun", "longname": "<anonymous>.postRun", "kind": "member", "memberof": "<anonymous>", "scope": "static"}, {"comment": "", "meta": {"range": [24786, 24824], "filename": "pyodide.js", "lineno": 715, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001723", "name": "scriptSrc", "type": "TemplateLiteral", "value": ""}}, "undocumented": true, "name": "scriptSrc", "longname": "<anonymous>~scriptSrc", "kind": "constant", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [25075, 25111], "filename": "pyodide.js", "lineno": 722, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001735", "name": "self.pyodide", "type": "AwaitExpression", "value": "", "paramnames": []}}, "undocumented": true, "name": "pyodide", "longname": "self.pyodide", "kind": "member", "memberof": "self", "scope": "static"}, {"comment": "", "meta": {"range": [25752, 25814], "filename": "pyodide.js", "lineno": 746, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001754", "name": "Module.saveState", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": []}}, "undocumented": true, "name": "saveState", "longname": "<anonymous>~Module.saveState", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [25818, 25902], "filename": "pyodide.js", "lineno": 747, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001768", "name": "Module.restoreState", "type": "ArrowFunctionExpression", "funcscope": "<anonymous>", "paramnames": ["state"]}}, "undocumented": true, "name": "restoreState", "longname": "<anonymous>~Module.restoreState", "kind": "function", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [26107, 26160], "filename": "pyodide.js", "lineno": 755, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001794", "name": "Module.globals", "type": "CallExpression", "funcscope": "<anonymous>", "value": "", "paramnames": []}}, "undocumented": true, "name": "globals", "longname": "<anonymous>~Module.globals", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [26191, 26240], "filename": "pyodide.js", "lineno": 758, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001811", "name": "response", "type": "AwaitExpression", "value": ""}}, "undocumented": true, "name": "response", "longname": "<anonymous>~response", "kind": "member", "memberof": "<anonymous>", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [26244, 26283], "filename": "pyodide.js", "lineno": 759, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001821", "name": "Module.packages", "type": "AwaitExpression", "funcscope": "<anonymous>", "value": "", "paramnames": []}}, "undocumented": true, "name": "packages", "longname": "<anonymous>~Module.packages", "kind": "member", "memberof": "<anonymous>~Module", "scope": "static"}, {"comment": "", "meta": {"range": [26323, 26377], "filename": "pyodide.js", "lineno": 762, "columnno": 2, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001837", "name": "self.pyodide", "type": "CallExpression", "value": "", "paramnames": []}}, "undocumented": true, "name": "pyodide", "longname": "self.pyodide", "kind": "member", "memberof": "self", "scope": "static"}, {"comment": "", "meta": {"range": [0, 49], "filename": "webworker.js", "lineno": 1, "columnno": 0, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001872", "name": "self.languagePluginUrl", "type": "Literal", "value": "{{ PYODIDE_BASE_URL }}", "paramnames": []}}, "undocumented": true, "name": "languagePluginUrl", "longname": "self.languagePluginUrl", "kind": "member", "memberof": "self", "scope": "static"}, {"comment": "", "meta": {"range": [81, 694], "filename": "webworker.js", "lineno": 4, "columnno": 0, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001882", "name": "onmessage", "type": "FunctionExpression", "paramnames": ["e"]}, "vars": {"data": "onmessage~data", "key": "onmessage~key", "self[undefined]": null}}, "undocumented": true, "name": "onmessage", "longname": "onmessage", "kind": "function", "scope": "global"}, {"comment": "", "meta": {"range": [151, 164], "filename": "webworker.js", "lineno": 6, "columnno": 8, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001891", "name": "data", "type": "MemberExpression", "value": "e.data"}}, "undocumented": true, "name": "data", "longname": "onmessage~data", "kind": "constant", "memberof": "onmessage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [177, 180], "filename": "webworker.js", "lineno": 7, "columnno": 11, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001898", "name": "key"}}, "undocumented": true, "name": "key", "longname": "onmessage~key", "kind": "member", "memberof": "onmessage", "scope": "inner", "params": []}, {"comment": "", "meta": {"range": [375, 396], "filename": "webworker.js", "lineno": 11, "columnno": 6, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001912", "name": "self[undefined]", "type": "MemberExpression", "value": "data[undefined]", "paramnames": []}}, "undocumented": true, "name": "self[undefined]", "longname": "self[undefined]", "kind": "member", "scope": "global"}, {"comment": "", "meta": {"range": [448, 504], "filename": "webworker.js", "lineno": 17, "columnno": 9, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001927", "name": "results", "type": "AwaitExpression", "value": ""}}, "undocumented": true, "name": "results", "longname": "results", "kind": "member", "scope": "global"}, {"comment": "", "meta": {"range": [591, 608], "filename": "webworker.js", "lineno": 20, "columnno": 22, "path": "/home/hood/pyodide/src", "code": {"id": "astnode100001945", "name": "error", "type": "MemberExpression", "value": "e.message"}}, "undocumented": true, "name": "error", "longname": "error", "kind": "member", "scope": "global"}, {"kind": "package", "longname": "package:undefined", "files": ["/home/hood/pyodide/src/pyodide.js", "/home/hood/pyodide/src/webworker.js"]}]